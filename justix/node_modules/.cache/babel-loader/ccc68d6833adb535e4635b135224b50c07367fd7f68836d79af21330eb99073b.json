{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vinic\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\React project\\\\justix\\\\src\\\\pages\\\\Cadastro\\\\index.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { Link, useNavigate } from 'react-router-dom';\n// import styles from './Cadastro.module.css';\n// import Header from '../../components/Header';\n// import Footer from '../../components/Footer';\n// import ContainerHome from '../../components/ContainerHome';\n\n// function Cadastro() {\n//     const navigate = useNavigate();\n\n//     const [formData, setFormData] = useState({\n//         nome: '',\n//         cpf: '',\n//         email: '',\n//         telefone: '',\n//         senha: '',\n//         confirmarSenha: ''\n//     });\n\n//     const [errors, setErrors] = useState({\n//         nome: '',\n//         cpf: '',\n//         email: '',\n//         telefone: '',\n//         senha: '',\n//         confirmarSenha: ''\n//     });\n\n//     const [submitStatus, setSubmitStatus] = useState({\n//         message: '',\n//         type: ''\n//     });\n\n//     const formatCPF = (value) => {\n//         return value\n//             .replace(/\\D/g, '')\n//             .replace(/(\\d{3})(\\d)/, '$1.$2')\n//             .replace(/(\\d{3})(\\d)/, '$1.$2')\n//             .replace(/(\\d{3})(\\d{1,2})/, '$1-$2')\n//             .replace(/(-\\d{2})\\d+?$/, '$1');\n//     };\n\n//     const formatTelefone = (value) => {\n//         return value\n//             .replace(/\\D/g, '')\n//             .replace(/(\\d{2})(\\d)/, '($1) $2')\n//             .replace(/(\\d{5})(\\d)/, '$1-$2')\n//             .replace(/(-\\d{4})\\d+?$/, '$1');\n//     };\n\n//     const validateField = (name, value) => {\n//         switch (name) {\n//             case 'nome':\n//                 return value.length < 3 ? 'Nome deve ter pelo menos 3 caracteres' : '';\n//             case 'cpf':\n//                 return value.replace(/\\D/g, '').length !== 11 \n//                     ? 'CPF deve ter 11 dígitos' \n//                     : '';\n//             case 'email':\n//                 return !value.includes('@') || !value.includes('.com')\n//                     ? 'Email deve conter @ e .com'\n//                     : '';\n//             case 'telefone':\n//                 return value.replace(/\\D/g, '').length < 11\n//                     ? 'Telefone deve ter 11 dígitos'\n//                     : '';\n//             case 'senha':\n//                 return value.length < 6\n//                     ? 'Senha deve ter pelo menos 6 caracteres'\n//                     : '';\n//             case 'confirmarSenha':\n//                 return value !== formData.senha\n//                     ? 'As senhas não coincidem'\n//                     : '';\n//             default:\n//                 return '';\n//         }\n//     };\n\n//     const handleInputChange = (e) => {\n//         const { id, value } = e.target;\n//         let formattedValue = value;\n\n//         if (id === 'cpf') {\n//             formattedValue = formatCPF(value);\n//         } else if (id === 'telefone') {\n//             formattedValue = formatTelefone(value);\n//         }\n\n//         setFormData((prevState) => ({\n//             ...prevState,\n//             [id]: formattedValue\n//         }));\n\n//         const error = validateField(id, formattedValue);\n//         setErrors((prevState) => ({\n//             ...prevState,\n//             [id]: error\n//         }));\n\n//         if (id === 'senha') {\n//             const confirmarSenhaError = formData.confirmarSenha\n//                 ? validateField('confirmarSenha', formData.confirmarSenha)\n//                 : '';\n//             setErrors((prevState) => ({\n//                 ...prevState,\n//                 confirmarSenha: confirmarSenhaError\n//             }));\n//         }\n//     };\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n\n//         try {\n//             console.log('Enviando dados:', formData); // Log dos dados enviados\n\n//             const response = await fetch('http://localhost:3001/usuarios', {\n//                 method: 'POST',\n//                 headers: {\n//                     'Content-Type': 'application/json'\n//                 },\n//                 body: JSON.stringify({\n//                     nome: formData.nome,\n//                     cpf: formData.cpf.replace(/\\D/g, ''),\n//                     email: formData.email,\n//                     telefone: formData.telefone.replace(/\\D/g, ''),\n//                     senha: formData.senha\n//                 })\n//             });\n\n//             const data = await response.json();\n//             console.log('Resposta do servidor:', data); // Log da resposta\n\n//             if (response.ok) {\n//                 setSubmitStatus({\n//                     message: 'Cadastro realizado com sucesso!',\n//                     type: 'success'\n//                 });\n//                 setTimeout(() => navigate('/login'), 2000);\n//             } else {\n//                 throw new Error(data.error || 'Erro ao realizar cadastro');\n//             }\n//         } catch (error) {\n//             console.error('Erro no cadastro:', error);\n//             setSubmitStatus({\n//                 message: error.message || 'Erro ao conectar com o servidor',\n//                 type: 'error'\n//             });\n//         }\n//     };\n//     return (\n\n//             <>\n//             <Header> \n//             <div className={styles.navleft}>\n//             <Link to=\"/login\" className={styles.navlinksl}>Login</Link>\n//             <Link to=\"/info\" className={styles.navlinks}>Sobre nós</Link>\n//             </div>\n//             </Header>\n//             <ContainerHome>\n//                 <section className={styles.cadastroSection}>\n//                     <div className={styles.cadastroContainer}>\n//                         <Link to=\"/\" className={styles.backButton}>← Voltar</Link>\n//                         <h2 className={styles.title}>Cadastro</h2>\n\n//                         {submitStatus.message && (\n//                             <div className={`${styles.statusMessage} ${styles[submitStatus.type]}`}>\n//                                 {submitStatus.message}\n//                             </div>\n//                         )}\n\n//                         <form onSubmit={handleSubmit} className={styles.cadastroForm}>\n//                             <div className={styles.formGroup}>\n//                                 <label htmlFor=\"nome\">Nome:</label>\n//                                 <input\n//                                     type=\"text\"\n//                                     id=\"nome\"\n//                                     value={formData.nome}\n//                                     onChange={handleInputChange}\n//                                     required\n//                                 />\n//                                 {errors.nome && <span className={styles.errorText}>{errors.nome}</span>}\n//                             </div>\n\n//                             <div className={styles.formGroup}>\n//                                 <label htmlFor=\"cpf\">CPF:</label>\n//                                 <input\n//                                     type=\"text\"\n//                                     id=\"cpf\"\n//                                     value={formData.cpf}\n//                                     onChange={handleInputChange}\n//                                     required\n//                                     maxLength=\"14\"\n//                                 />\n//                                 {errors.cpf && <span className={styles.errorText}>{errors.cpf}</span>}\n//                             </div>\n\n//                             <div className={styles.formGroup}>\n//                                 <label htmlFor=\"email\">E-mail:</label>\n//                                 <input\n//                                     type=\"email\"\n//                                     id=\"email\"\n//                                     value={formData.email}\n//                                     onChange={handleInputChange}\n//                                     required\n//                                 />\n//                                 {errors.email && <span className={styles.errorText}>{errors.email}</span>}\n//                             </div>\n\n//                             <div className={styles.formGroup}>\n//                                 <label htmlFor=\"telefone\">Telefone:</label>\n//                                 <input\n//                                     type=\"text\"\n//                                     id=\"telefone\"\n//                                     value={formData.telefone}\n//                                     onChange={handleInputChange}\n//                                     required\n//                                     maxLength=\"15\"\n//                                 />\n//                                 {errors.telefone && <span className={styles.errorText}>{errors.telefone}</span>}\n//                             </div>\n\n//                             <div className={styles.formGroup}>\n//                                 <label htmlFor=\"senha\">Senha:</label>\n//                                 <input\n//                                     type=\"password\"\n//                                     id=\"senha\"\n//                                     value={formData.senha}\n//                                     onChange={handleInputChange}\n//                                     required\n//                                 />\n//                                 {errors.senha && <span className={styles.errorText}>{errors.senha}</span>}\n//                             </div>\n\n//                             <div className={styles.formGroup}>\n//                                 <label htmlFor=\"confirmarSenha\">Confirmar Senha:</label>\n//                                 <input\n//                                     type=\"password\"\n//                                     id=\"confirmarSenha\"\n//                                     value={formData.confirmarSenha}\n//                                     onChange={handleInputChange}\n//                                     required\n//                                 />\n//                                 {errors.confirmarSenha && (\n//                                     <span className={styles.errorText}>{errors.confirmarSenha}</span>\n//                                 )}\n//                             </div>\n\n//                             <button type=\"submit\" className={styles.submitButton}>Cadastrar</button>\n//                         </form>\n//                     </div>\n//                 </section>\n//             </ContainerHome>\n//             <Footer />\n//         </>\n//     );\n// }\n\n// export default Cadastro;\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport styles from './Cadastro.module.css';\nimport Header from '../../components/Header';\nimport Footer from '../../components/Footer';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Cadastro() {\n  _s();\n  const navigate = useNavigate();\n  const sidebarRef = useRef(null); // Referência para o sidebar\n  const [formData, setFormData] = useState({\n    nome: '',\n    cpf: '',\n    email: '',\n    telefone: '',\n    senha: '',\n    confirmarSenha: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [submitStatus, setSubmitStatus] = useState({});\n  const [isSidebarVisible, setSidebarVisible] = useState(false); // Estado para controlar a visibilidade do sidebar\n\n  // Função para formatar CPF\n  const formatCPF = value => value.replace(/\\D/g, '').replace(/(\\d{3})(\\d)/, '$1.$2').replace(/(\\d{3})(\\d)/, '$1.$2').replace(/(\\d{3})(\\d{1,2})/, '$1-$2').replace(/(-\\d{2})\\d+?$/, '$1');\n\n  // Função para formatar Telefone\n  const formatTelefone = value => value.replace(/\\D/g, '').replace(/(\\d{2})(\\d)/, '($1) $2').replace(/(\\d{5})(\\d)/, '$1-$2').replace(/(-\\d{4})\\d+?$/, '$1');\n\n  // Validação dos campos\n  const validateField = (name, value) => {\n    switch (name) {\n      case 'nome':\n        return value.length < 3 ? 'Nome deve ter pelo menos 3 caracteres' : '';\n      case 'cpf':\n        return value.replace(/\\D/g, '').length !== 11 ? 'CPF deve ter 11 dígitos' : '';\n      case 'email':\n        return !value.includes('@') || !value.includes('.com') ? 'Email deve conter @ e .com' : '';\n      case 'telefone':\n        return value.replace(/\\D/g, '').length < 11 ? 'Telefone deve ter 11 dígitos' : '';\n      case 'senha':\n        return value.length < 6 ? 'Senha deve ter pelo menos 6 caracteres' : '';\n      case 'confirmarSenha':\n        return value !== formData.senha ? 'As senhas não coincidem' : '';\n      default:\n        return '';\n    }\n  };\n\n  // Atualiza os valores dos campos e realiza a validação\n  const handleInputChange = e => {\n    const {\n      id,\n      value\n    } = e.target;\n    const formattedValue = id === 'cpf' ? formatCPF(value) : id === 'telefone' ? formatTelefone(value) : value;\n    setFormData(prev => ({\n      ...prev,\n      [id]: formattedValue\n    }));\n    const error = validateField(id, formattedValue);\n    setErrors(prev => ({\n      ...prev,\n      [id]: error\n    }));\n  };\n\n  // Lida com o envio do formulário\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:3001/usuarios', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          nome: formData.nome,\n          cpf: formData.cpf.replace(/\\D/g, ''),\n          email: formData.email,\n          telefone: formData.telefone.replace(/\\D/g, ''),\n          senha: formData.senha\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setSubmitStatus({\n          message: 'Cadastro realizado com sucesso!',\n          type: 'success'\n        });\n        setTimeout(() => navigate('/login'), 2000);\n      } else {\n        throw new Error(data.error || 'Erro ao realizar cadastro');\n      }\n    } catch (error) {\n      setSubmitStatus({\n        message: error.message || 'Erro ao conectar com o servidor',\n        type: 'error'\n      });\n    }\n  };\n\n  // Função para alternar a visibilidade do sidebar\n  const toggleSidebar = () => setSidebarVisible(!isSidebarVisible);\n\n  // Hook para lidar com cliques fora do sidebar\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (sidebarRef.current && !sidebarRef.current.contains(event.target)) {\n        setSidebarVisible(false);\n      }\n    };\n\n    // Adiciona o evento de clique\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.toggleButton,\n      onClick: toggleSidebar,\n      children: isSidebarVisible ? 'Fechar Cadastro' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.sidebarContainer} ${isSidebarVisible ? styles.sidebarVisible : ''}`,\n      ref: sidebarRef,\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: styles.cadastroSidebar,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: styles.title,\n          children: \"Cadastro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 21\n        }, this), submitStatus.message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.statusMessage} ${styles[submitStatus.type]}`,\n          children: submitStatus.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: styles.cadastroForm,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"nome\",\n              children: \"Nome:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"nome\",\n              value: formData.nome,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 29\n            }, this), errors.nome && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.errorText,\n              children: errors.nome\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"cpf\",\n              children: \"CPF:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"cpf\",\n              value: formData.cpf,\n              onChange: handleInputChange,\n              required: true,\n              maxLength: \"14\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 29\n            }, this), errors.cpf && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.errorText,\n              children: errors.cpf\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 44\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"E-mail:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              value: formData.email,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 29\n            }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.errorText,\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 46\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"telefone\",\n              children: \"Telefone:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"telefone\",\n              value: formData.telefone,\n              onChange: handleInputChange,\n              required: true,\n              maxLength: \"15\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 29\n            }, this), errors.telefone && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.errorText,\n              children: errors.telefone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 49\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"senha\",\n              children: \"Senha:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"senha\",\n              value: formData.senha,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 29\n            }, this), errors.senha && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.errorText,\n              children: errors.senha\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 46\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.formGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"confirmarSenha\",\n              children: \"Confirmar Senha:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"confirmarSenha\",\n              value: formData.confirmarSenha,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 29\n            }, this), errors.confirmarSenha && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.errorText,\n              children: errors.confirmarSenha\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 55\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: styles.submitButton,\n            children: \"Cadastrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Cadastro, \"HaEvOIDfpWN5ldVOfLfE0VtIixM=\", false, function () {\n  return [useNavigate];\n});\n_c = Cadastro;\nexport default Cadastro;\nvar _c;\n$RefreshReg$(_c, \"Cadastro\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Link","useNavigate","styles","Header","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","Cadastro","_s","navigate","sidebarRef","formData","setFormData","nome","cpf","email","telefone","senha","confirmarSenha","errors","setErrors","submitStatus","setSubmitStatus","isSidebarVisible","setSidebarVisible","formatCPF","value","replace","formatTelefone","validateField","name","length","includes","handleInputChange","e","id","target","formattedValue","prev","error","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","message","type","setTimeout","Error","toggleSidebar","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","children","className","toggleButton","onClick","fileName","_jsxFileName","lineNumber","columnNumber","sidebarContainer","sidebarVisible","ref","cadastroSidebar","title","statusMessage","onSubmit","cadastroForm","formGroup","htmlFor","onChange","required","errorText","maxLength","submitButton","_c","$RefreshReg$"],"sources":["C:/Users/vinic/OneDrive/Área de Trabalho/React project/justix/src/pages/Cadastro/index.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { Link, useNavigate } from 'react-router-dom';\r\n// import styles from './Cadastro.module.css';\r\n// import Header from '../../components/Header';\r\n// import Footer from '../../components/Footer';\r\n// import ContainerHome from '../../components/ContainerHome';\r\n\r\n// function Cadastro() {\r\n//     const navigate = useNavigate();\r\n\r\n//     const [formData, setFormData] = useState({\r\n//         nome: '',\r\n//         cpf: '',\r\n//         email: '',\r\n//         telefone: '',\r\n//         senha: '',\r\n//         confirmarSenha: ''\r\n//     });\r\n\r\n//     const [errors, setErrors] = useState({\r\n//         nome: '',\r\n//         cpf: '',\r\n//         email: '',\r\n//         telefone: '',\r\n//         senha: '',\r\n//         confirmarSenha: ''\r\n//     });\r\n\r\n//     const [submitStatus, setSubmitStatus] = useState({\r\n//         message: '',\r\n//         type: ''\r\n//     });\r\n\r\n//     const formatCPF = (value) => {\r\n//         return value\r\n//             .replace(/\\D/g, '')\r\n//             .replace(/(\\d{3})(\\d)/, '$1.$2')\r\n//             .replace(/(\\d{3})(\\d)/, '$1.$2')\r\n//             .replace(/(\\d{3})(\\d{1,2})/, '$1-$2')\r\n//             .replace(/(-\\d{2})\\d+?$/, '$1');\r\n//     };\r\n\r\n//     const formatTelefone = (value) => {\r\n//         return value\r\n//             .replace(/\\D/g, '')\r\n//             .replace(/(\\d{2})(\\d)/, '($1) $2')\r\n//             .replace(/(\\d{5})(\\d)/, '$1-$2')\r\n//             .replace(/(-\\d{4})\\d+?$/, '$1');\r\n//     };\r\n\r\n//     const validateField = (name, value) => {\r\n//         switch (name) {\r\n//             case 'nome':\r\n//                 return value.length < 3 ? 'Nome deve ter pelo menos 3 caracteres' : '';\r\n//             case 'cpf':\r\n//                 return value.replace(/\\D/g, '').length !== 11 \r\n//                     ? 'CPF deve ter 11 dígitos' \r\n//                     : '';\r\n//             case 'email':\r\n//                 return !value.includes('@') || !value.includes('.com')\r\n//                     ? 'Email deve conter @ e .com'\r\n//                     : '';\r\n//             case 'telefone':\r\n//                 return value.replace(/\\D/g, '').length < 11\r\n//                     ? 'Telefone deve ter 11 dígitos'\r\n//                     : '';\r\n//             case 'senha':\r\n//                 return value.length < 6\r\n//                     ? 'Senha deve ter pelo menos 6 caracteres'\r\n//                     : '';\r\n//             case 'confirmarSenha':\r\n//                 return value !== formData.senha\r\n//                     ? 'As senhas não coincidem'\r\n//                     : '';\r\n//             default:\r\n//                 return '';\r\n//         }\r\n//     };\r\n\r\n//     const handleInputChange = (e) => {\r\n//         const { id, value } = e.target;\r\n//         let formattedValue = value;\r\n\r\n//         if (id === 'cpf') {\r\n//             formattedValue = formatCPF(value);\r\n//         } else if (id === 'telefone') {\r\n//             formattedValue = formatTelefone(value);\r\n//         }\r\n\r\n//         setFormData((prevState) => ({\r\n//             ...prevState,\r\n//             [id]: formattedValue\r\n//         }));\r\n\r\n//         const error = validateField(id, formattedValue);\r\n//         setErrors((prevState) => ({\r\n//             ...prevState,\r\n//             [id]: error\r\n//         }));\r\n\r\n//         if (id === 'senha') {\r\n//             const confirmarSenhaError = formData.confirmarSenha\r\n//                 ? validateField('confirmarSenha', formData.confirmarSenha)\r\n//                 : '';\r\n//             setErrors((prevState) => ({\r\n//                 ...prevState,\r\n//                 confirmarSenha: confirmarSenhaError\r\n//             }));\r\n//         }\r\n//     };\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n        \r\n//         try {\r\n//             console.log('Enviando dados:', formData); // Log dos dados enviados\r\n    \r\n//             const response = await fetch('http://localhost:3001/usuarios', {\r\n//                 method: 'POST',\r\n//                 headers: {\r\n//                     'Content-Type': 'application/json'\r\n//                 },\r\n//                 body: JSON.stringify({\r\n//                     nome: formData.nome,\r\n//                     cpf: formData.cpf.replace(/\\D/g, ''),\r\n//                     email: formData.email,\r\n//                     telefone: formData.telefone.replace(/\\D/g, ''),\r\n//                     senha: formData.senha\r\n//                 })\r\n//             });\r\n    \r\n//             const data = await response.json();\r\n//             console.log('Resposta do servidor:', data); // Log da resposta\r\n    \r\n//             if (response.ok) {\r\n//                 setSubmitStatus({\r\n//                     message: 'Cadastro realizado com sucesso!',\r\n//                     type: 'success'\r\n//                 });\r\n//                 setTimeout(() => navigate('/login'), 2000);\r\n//             } else {\r\n//                 throw new Error(data.error || 'Erro ao realizar cadastro');\r\n//             }\r\n//         } catch (error) {\r\n//             console.error('Erro no cadastro:', error);\r\n//             setSubmitStatus({\r\n//                 message: error.message || 'Erro ao conectar com o servidor',\r\n//                 type: 'error'\r\n//             });\r\n//         }\r\n//     };\r\n//     return (\r\n       \r\n//             <>\r\n//             <Header> \r\n//             <div className={styles.navleft}>\r\n//             <Link to=\"/login\" className={styles.navlinksl}>Login</Link>\r\n//             <Link to=\"/info\" className={styles.navlinks}>Sobre nós</Link>\r\n//             </div>\r\n//             </Header>\r\n//             <ContainerHome>\r\n//                 <section className={styles.cadastroSection}>\r\n//                     <div className={styles.cadastroContainer}>\r\n//                         <Link to=\"/\" className={styles.backButton}>← Voltar</Link>\r\n//                         <h2 className={styles.title}>Cadastro</h2>\r\n\r\n//                         {submitStatus.message && (\r\n//                             <div className={`${styles.statusMessage} ${styles[submitStatus.type]}`}>\r\n//                                 {submitStatus.message}\r\n//                             </div>\r\n//                         )}\r\n\r\n//                         <form onSubmit={handleSubmit} className={styles.cadastroForm}>\r\n//                             <div className={styles.formGroup}>\r\n//                                 <label htmlFor=\"nome\">Nome:</label>\r\n//                                 <input\r\n//                                     type=\"text\"\r\n//                                     id=\"nome\"\r\n//                                     value={formData.nome}\r\n//                                     onChange={handleInputChange}\r\n//                                     required\r\n//                                 />\r\n//                                 {errors.nome && <span className={styles.errorText}>{errors.nome}</span>}\r\n//                             </div>\r\n\r\n//                             <div className={styles.formGroup}>\r\n//                                 <label htmlFor=\"cpf\">CPF:</label>\r\n//                                 <input\r\n//                                     type=\"text\"\r\n//                                     id=\"cpf\"\r\n//                                     value={formData.cpf}\r\n//                                     onChange={handleInputChange}\r\n//                                     required\r\n//                                     maxLength=\"14\"\r\n//                                 />\r\n//                                 {errors.cpf && <span className={styles.errorText}>{errors.cpf}</span>}\r\n//                             </div>\r\n\r\n//                             <div className={styles.formGroup}>\r\n//                                 <label htmlFor=\"email\">E-mail:</label>\r\n//                                 <input\r\n//                                     type=\"email\"\r\n//                                     id=\"email\"\r\n//                                     value={formData.email}\r\n//                                     onChange={handleInputChange}\r\n//                                     required\r\n//                                 />\r\n//                                 {errors.email && <span className={styles.errorText}>{errors.email}</span>}\r\n//                             </div>\r\n\r\n//                             <div className={styles.formGroup}>\r\n//                                 <label htmlFor=\"telefone\">Telefone:</label>\r\n//                                 <input\r\n//                                     type=\"text\"\r\n//                                     id=\"telefone\"\r\n//                                     value={formData.telefone}\r\n//                                     onChange={handleInputChange}\r\n//                                     required\r\n//                                     maxLength=\"15\"\r\n//                                 />\r\n//                                 {errors.telefone && <span className={styles.errorText}>{errors.telefone}</span>}\r\n//                             </div>\r\n\r\n//                             <div className={styles.formGroup}>\r\n//                                 <label htmlFor=\"senha\">Senha:</label>\r\n//                                 <input\r\n//                                     type=\"password\"\r\n//                                     id=\"senha\"\r\n//                                     value={formData.senha}\r\n//                                     onChange={handleInputChange}\r\n//                                     required\r\n//                                 />\r\n//                                 {errors.senha && <span className={styles.errorText}>{errors.senha}</span>}\r\n//                             </div>\r\n\r\n//                             <div className={styles.formGroup}>\r\n//                                 <label htmlFor=\"confirmarSenha\">Confirmar Senha:</label>\r\n//                                 <input\r\n//                                     type=\"password\"\r\n//                                     id=\"confirmarSenha\"\r\n//                                     value={formData.confirmarSenha}\r\n//                                     onChange={handleInputChange}\r\n//                                     required\r\n//                                 />\r\n//                                 {errors.confirmarSenha && (\r\n//                                     <span className={styles.errorText}>{errors.confirmarSenha}</span>\r\n//                                 )}\r\n//                             </div>\r\n\r\n//                             <button type=\"submit\" className={styles.submitButton}>Cadastrar</button>\r\n//                         </form>\r\n//                     </div>\r\n//                 </section>\r\n//             </ContainerHome>\r\n//             <Footer />\r\n//         </>\r\n//     );\r\n// }\r\n\r\n// export default Cadastro;\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport styles from './Cadastro.module.css';\r\nimport Header from '../../components/Header';\r\nimport Footer from '../../components/Footer';\r\n\r\nfunction Cadastro() {\r\n    const navigate = useNavigate();\r\n    const sidebarRef = useRef(null); // Referência para o sidebar\r\n    const [formData, setFormData] = useState({\r\n        nome: '',\r\n        cpf: '',\r\n        email: '',\r\n        telefone: '',\r\n        senha: '',\r\n        confirmarSenha: ''\r\n    });\r\n    \r\n    const [errors, setErrors] = useState({});\r\n    const [submitStatus, setSubmitStatus] = useState({});\r\n    const [isSidebarVisible, setSidebarVisible] = useState(false); // Estado para controlar a visibilidade do sidebar\r\n\r\n    // Função para formatar CPF\r\n    const formatCPF = (value) => value.replace(/\\D/g, '')\r\n        .replace(/(\\d{3})(\\d)/, '$1.$2')\r\n        .replace(/(\\d{3})(\\d)/, '$1.$2')\r\n        .replace(/(\\d{3})(\\d{1,2})/, '$1-$2')\r\n        .replace(/(-\\d{2})\\d+?$/, '$1');\r\n\r\n    // Função para formatar Telefone\r\n    const formatTelefone = (value) => value.replace(/\\D/g, '')\r\n        .replace(/(\\d{2})(\\d)/, '($1) $2')\r\n        .replace(/(\\d{5})(\\d)/, '$1-$2')\r\n        .replace(/(-\\d{4})\\d+?$/, '$1');\r\n\r\n    // Validação dos campos\r\n    const validateField = (name, value) => {\r\n        switch (name) {\r\n            case 'nome':\r\n                return value.length < 3 ? 'Nome deve ter pelo menos 3 caracteres' : '';\r\n            case 'cpf':\r\n                return value.replace(/\\D/g, '').length !== 11 ? 'CPF deve ter 11 dígitos' : '';\r\n            case 'email':\r\n                return !value.includes('@') || !value.includes('.com') ? 'Email deve conter @ e .com' : '';\r\n            case 'telefone':\r\n                return value.replace(/\\D/g, '').length < 11 ? 'Telefone deve ter 11 dígitos' : '';\r\n            case 'senha':\r\n                return value.length < 6 ? 'Senha deve ter pelo menos 6 caracteres' : '';\r\n            case 'confirmarSenha':\r\n                return value !== formData.senha ? 'As senhas não coincidem' : '';\r\n            default:\r\n                return '';\r\n        }\r\n    };\r\n\r\n    // Atualiza os valores dos campos e realiza a validação\r\n    const handleInputChange = (e) => {\r\n        const { id, value } = e.target;\r\n        const formattedValue = id === 'cpf' ? formatCPF(value) : id === 'telefone' ? formatTelefone(value) : value;\r\n        setFormData((prev) => ({ ...prev, [id]: formattedValue }));\r\n        \r\n        const error = validateField(id, formattedValue);\r\n        setErrors((prev) => ({ ...prev, [id]: error }));\r\n    };\r\n\r\n    // Lida com o envio do formulário\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:3001/usuarios', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    nome: formData.nome,\r\n                    cpf: formData.cpf.replace(/\\D/g, ''),\r\n                    email: formData.email,\r\n                    telefone: formData.telefone.replace(/\\D/g, ''),\r\n                    senha: formData.senha\r\n                })\r\n            });\r\n\r\n            const data = await response.json();\r\n            if (response.ok) {\r\n                setSubmitStatus({ message: 'Cadastro realizado com sucesso!', type: 'success' });\r\n                setTimeout(() => navigate('/login'), 2000);\r\n            } else {\r\n                throw new Error(data.error || 'Erro ao realizar cadastro');\r\n            }\r\n        } catch (error) {\r\n            setSubmitStatus({ message: error.message || 'Erro ao conectar com o servidor', type: 'error' });\r\n        }\r\n    };\r\n\r\n    // Função para alternar a visibilidade do sidebar\r\n    const toggleSidebar = () => setSidebarVisible(!isSidebarVisible);\r\n\r\n    // Hook para lidar com cliques fora do sidebar\r\n    useEffect(() => {\r\n        const handleClickOutside = (event) => {\r\n            if (sidebarRef.current && !sidebarRef.current.contains(event.target)) {\r\n                setSidebarVisible(false);\r\n            }\r\n        };\r\n\r\n        // Adiciona o evento de clique\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            \r\n            <button className={styles.toggleButton} onClick={toggleSidebar}>\r\n                {isSidebarVisible ? 'Fechar Cadastro':''}\r\n            </button>\r\n\r\n            <div className={`${styles.sidebarContainer} ${isSidebarVisible ? styles.sidebarVisible : ''}`} ref={sidebarRef}>\r\n                <section className={styles.cadastroSidebar}>\r\n                    <h2 className={styles.title}>Cadastro</h2>\r\n\r\n                    {submitStatus.message && (\r\n                        <div className={`${styles.statusMessage} ${styles[submitStatus.type]}`}>\r\n                            {submitStatus.message}\r\n                        </div>\r\n                    )}\r\n\r\n                    <form onSubmit={handleSubmit} className={styles.cadastroForm}>\r\n                        <div className={styles.formGroup}>\r\n                            <label htmlFor=\"nome\">Nome:</label>\r\n                            <input type=\"text\" id=\"nome\" value={formData.nome} onChange={handleInputChange} required />\r\n                            {errors.nome && <span className={styles.errorText}>{errors.nome}</span>}\r\n                        </div>\r\n\r\n                        <div className={styles.formGroup}>\r\n                            <label htmlFor=\"cpf\">CPF:</label>\r\n                            <input type=\"text\" id=\"cpf\" value={formData.cpf} onChange={handleInputChange} required maxLength=\"14\" />\r\n                            {errors.cpf && <span className={styles.errorText}>{errors.cpf}</span>}\r\n                        </div>\r\n\r\n                        <div className={styles.formGroup}>\r\n                            <label htmlFor=\"email\">E-mail:</label>\r\n                            <input type=\"email\" id=\"email\" value={formData.email} onChange={handleInputChange} required />\r\n                            {errors.email && <span className={styles.errorText}>{errors.email}</span>}\r\n                        </div>\r\n\r\n                        <div className={styles.formGroup}>\r\n                            <label htmlFor=\"telefone\">Telefone:</label>\r\n                            <input type=\"text\" id=\"telefone\" value={formData.telefone} onChange={handleInputChange} required maxLength=\"15\" />\r\n                            {errors.telefone && <span className={styles.errorText}>{errors.telefone}</span>}\r\n                        </div>\r\n\r\n                        <div className={styles.formGroup}>\r\n                            <label htmlFor=\"senha\">Senha:</label>\r\n                            <input type=\"password\" id=\"senha\" value={formData.senha} onChange={handleInputChange} required />\r\n                            {errors.senha && <span className={styles.errorText}>{errors.senha}</span>}\r\n                        </div>\r\n\r\n                        <div className={styles.formGroup}>\r\n                            <label htmlFor=\"confirmarSenha\">Confirmar Senha:</label>\r\n                            <input type=\"password\" id=\"confirmarSenha\" value={formData.confirmarSenha} onChange={handleInputChange} required />\r\n                            {errors.confirmarSenha && <span className={styles.errorText}>{errors.confirmarSenha}</span>}\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className={styles.submitButton}>Cadastrar</button>\r\n                    </form>\r\n                </section>\r\n            </div>\r\n\r\n           \r\n        </>\r\n    );\r\n}\r\n\r\nexport default Cadastro;\r\n\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}