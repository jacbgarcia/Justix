{"ast":null,"code":"// src/components/Tribunais.js\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const TribunaisAdmin = () => {\n//   const [tribunais, setTribunais] = useState([]);\n//   const [tribunalAtivo, setTribunalAtivo] = useState(null);  // Usado para edição\n//   const [novoTribunal, setNovoTribunal] = useState({\n//     nome: '',\n//     cidade: '',\n//     estado: '',\n//     endereco: '',\n//     cep: '',\n//     avaliacao_media: 0\n//   });\n\n//   useEffect(() => {\n//     listarTribunais();\n//   }, []);\n\n//   // Função para buscar todos os fóruns\n//   const listarTribunais = async () => {\n//     try {\n//       const res = await axios.get('http://localhost:3001/tribunais');\n//       setTribunais(res.data);\n//     } catch (err) {\n//       console.error('Erro ao listar fóruns:', err);\n//     }\n//   };\n\n//   // Função para excluir um tribunal\n//   const excluirTribunal = async (id) => {\n//     try {\n//       await axios.delete(`http://localhost:3001/tribunais/${id}`);\n//       listarTribunais();\n//     } catch (err) {\n//       console.error('Erro ao excluir tribunal:', err);\n//     }\n//   };\n\n//   // Função para inserir um novo tribunal\n//   const inserirTribunal = async () => {\n//     try {\n//       await axios.post('http://localhost:3001/tribunais', novoTribunal);\n//       listarTribunais(); // Atualiza a lista\n//       resetarFormulario();\n//     } catch (err) {\n//       console.error('Erro ao inserir tribunal:', err);\n//     }\n//   };\n\n//   // Função para atualizar um tribunal existente\n//   const editarTribunal = async () => {\n//     try {\n//       await axios.put(`http://localhost:3001/tribunais/${tribunalAtivo.id_tribunal}`, novoTribunal);\n//       listarTribunais();\n//       resetarFormulario();\n//     } catch (err) {\n//       console.error('Erro ao editar tribunal:', err);\n//     }\n//   };\n\n//   // Preencher o formulário para edição\n//   const selecionarParaEdicao = (tribunal) => {\n//     setNovoTribunal(tribunal);\n//     setTribunalAtivo(tribunal);\n//   };\n\n//   // Resetar o formulário\n//   const resetarFormulario = () => {\n//     setNovoTribunal({\n//       nome: '',\n//       cidade: '',\n//       estado: '',\n//       endereco: '',\n//       cep: '',\n//       avaliacao_media: 0\n//     });\n//     setTribunalAtivo(null);\n//   };\n\n//   return (\n//     <div>\n//       <h2>Lista de Tribunais</h2>\n//       <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\">\n//         <thead>\n//           <tr>\n//             <th>Nome</th>\n//             <th>Cidade</th>\n//             <th>Estado</th>\n//             <th>Endereço</th>\n//             <th>CEP</th>\n//             <th>Avaliação Média</th>\n//             <th>Ações</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {tribunais.map(tribunal => (\n//             <tr key={tribunal.id_tribunal}>\n//               <td>{tribunal.nome}</td>\n//               <td>{tribunal.cidade}</td>\n//               <td>{tribunal.estado}</td>\n//               <td>{tribunal.endereco}</td>\n//               <td>{tribunal.cep}</td>\n//               <td>{tribunal.avaliacao_media}</td>\n//               <td>\n//                 <button onClick={() => selecionarParaEdicao(tribunal)}>Editar</button>\n//                 <button onClick={() => excluirTribunal(tribunal.id_tribunal)}>Excluir</button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n\n//       <h3>{tribunalAtivo ? 'Editar Tribunal' : 'Inserir Novo Tribunal'}</h3>\n//       <form onSubmit={tribunalAtivo ? editarTribunal : inserirTribunal}>\n//         <div>\n//           <label>Nome:</label>\n//           <input\n//             type=\"text\"\n//             value={novoTribunal.nome}\n//             onChange={(e) => setNovoTribunal({ ...novoTribunal, nome: e.target.value })}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Cidade:</label>\n//           <input\n//             type=\"text\"\n//             value={novoTribunal.cidade}\n//             onChange={(e) => setNovoTribunal({ ...novoTribunal, cidade: e.target.value })}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Estado:</label>\n//           <input\n//             type=\"text\"\n//             value={novoTribunal.estado}\n//             onChange={(e) => setNovoTribunal({ ...novoTribunal, estado: e.target.value })}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Endereço:</label>\n//           <input\n//             type=\"text\"\n//             value={novoTribunal.endereco}\n//             onChange={(e) => setNovoTribunal({ ...novoTribunal, endereco: e.target.value })}\n//           />\n//         </div>\n//         <div>\n//           <label>CEP:</label>\n//           <input\n//             type=\"text\"\n//             value={novoTribunal.cep}\n//             onChange={(e) => setNovoTribunal({ ...novoTribunal, cep: e.target.value })}\n//           />\n//         </div>\n//         <div>\n//           <label>Avaliação Média:</label>\n//           <input\n//             type=\"number\"\n//             value={novoTribunal.avaliacao_media}\n//             onChange={(e) => setNovoTribunal({ ...novoTribunal, avaliacao_media: e.target.value })}\n//             step=\"0.01\"\n//             min=\"0\"\n//             max=\"10\"\n//             required\n//           />\n//         </div>\n//         <button type=\"submit\">{tribunalAtivo ? 'Salvar Alterações' : 'Inserir Tribunal'}</button>\n//         {tribunalAtivo && <button type=\"button\" onClick={resetarFormulario}>Cancelar Edição</button>}\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default TribunaisAdmin;","map":{"version":3,"names":[],"sources":["C:/Users/vinic/OneDrive/Área de Trabalho/React project/justix/src/components/BD/TribunaisAdmin.js"],"sourcesContent":["// src/components/Tribunais.js\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const TribunaisAdmin = () => {\r\n//   const [tribunais, setTribunais] = useState([]);\r\n//   const [tribunalAtivo, setTribunalAtivo] = useState(null);  // Usado para edição\r\n//   const [novoTribunal, setNovoTribunal] = useState({\r\n//     nome: '',\r\n//     cidade: '',\r\n//     estado: '',\r\n//     endereco: '',\r\n//     cep: '',\r\n//     avaliacao_media: 0\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     listarTribunais();\r\n//   }, []);\r\n\r\n//   // Função para buscar todos os fóruns\r\n//   const listarTribunais = async () => {\r\n//     try {\r\n//       const res = await axios.get('http://localhost:3001/tribunais');\r\n//       setTribunais(res.data);\r\n//     } catch (err) {\r\n//       console.error('Erro ao listar fóruns:', err);\r\n//     }\r\n//   };\r\n\r\n//   // Função para excluir um tribunal\r\n//   const excluirTribunal = async (id) => {\r\n//     try {\r\n//       await axios.delete(`http://localhost:3001/tribunais/${id}`);\r\n//       listarTribunais();\r\n//     } catch (err) {\r\n//       console.error('Erro ao excluir tribunal:', err);\r\n//     }\r\n//   };\r\n\r\n//   // Função para inserir um novo tribunal\r\n//   const inserirTribunal = async () => {\r\n//     try {\r\n//       await axios.post('http://localhost:3001/tribunais', novoTribunal);\r\n//       listarTribunais(); // Atualiza a lista\r\n//       resetarFormulario();\r\n//     } catch (err) {\r\n//       console.error('Erro ao inserir tribunal:', err);\r\n//     }\r\n//   };\r\n\r\n//   // Função para atualizar um tribunal existente\r\n//   const editarTribunal = async () => {\r\n//     try {\r\n//       await axios.put(`http://localhost:3001/tribunais/${tribunalAtivo.id_tribunal}`, novoTribunal);\r\n//       listarTribunais();\r\n//       resetarFormulario();\r\n//     } catch (err) {\r\n//       console.error('Erro ao editar tribunal:', err);\r\n//     }\r\n//   };\r\n\r\n//   // Preencher o formulário para edição\r\n//   const selecionarParaEdicao = (tribunal) => {\r\n//     setNovoTribunal(tribunal);\r\n//     setTribunalAtivo(tribunal);\r\n//   };\r\n\r\n//   // Resetar o formulário\r\n//   const resetarFormulario = () => {\r\n//     setNovoTribunal({\r\n//       nome: '',\r\n//       cidade: '',\r\n//       estado: '',\r\n//       endereco: '',\r\n//       cep: '',\r\n//       avaliacao_media: 0\r\n//     });\r\n//     setTribunalAtivo(null);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Lista de Tribunais</h2>\r\n//       <table border=\"1\" cellPadding=\"10\" cellSpacing=\"0\">\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Nome</th>\r\n//             <th>Cidade</th>\r\n//             <th>Estado</th>\r\n//             <th>Endereço</th>\r\n//             <th>CEP</th>\r\n//             <th>Avaliação Média</th>\r\n//             <th>Ações</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {tribunais.map(tribunal => (\r\n//             <tr key={tribunal.id_tribunal}>\r\n//               <td>{tribunal.nome}</td>\r\n//               <td>{tribunal.cidade}</td>\r\n//               <td>{tribunal.estado}</td>\r\n//               <td>{tribunal.endereco}</td>\r\n//               <td>{tribunal.cep}</td>\r\n//               <td>{tribunal.avaliacao_media}</td>\r\n//               <td>\r\n//                 <button onClick={() => selecionarParaEdicao(tribunal)}>Editar</button>\r\n//                 <button onClick={() => excluirTribunal(tribunal.id_tribunal)}>Excluir</button>\r\n//               </td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n\r\n//       <h3>{tribunalAtivo ? 'Editar Tribunal' : 'Inserir Novo Tribunal'}</h3>\r\n//       <form onSubmit={tribunalAtivo ? editarTribunal : inserirTribunal}>\r\n//         <div>\r\n//           <label>Nome:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={novoTribunal.nome}\r\n//             onChange={(e) => setNovoTribunal({ ...novoTribunal, nome: e.target.value })}\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <label>Cidade:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={novoTribunal.cidade}\r\n//             onChange={(e) => setNovoTribunal({ ...novoTribunal, cidade: e.target.value })}\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <label>Estado:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={novoTribunal.estado}\r\n//             onChange={(e) => setNovoTribunal({ ...novoTribunal, estado: e.target.value })}\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <label>Endereço:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={novoTribunal.endereco}\r\n//             onChange={(e) => setNovoTribunal({ ...novoTribunal, endereco: e.target.value })}\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <label>CEP:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={novoTribunal.cep}\r\n//             onChange={(e) => setNovoTribunal({ ...novoTribunal, cep: e.target.value })}\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <label>Avaliação Média:</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             value={novoTribunal.avaliacao_media}\r\n//             onChange={(e) => setNovoTribunal({ ...novoTribunal, avaliacao_media: e.target.value })}\r\n//             step=\"0.01\"\r\n//             min=\"0\"\r\n//             max=\"10\"\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <button type=\"submit\">{tribunalAtivo ? 'Salvar Alterações' : 'Inserir Tribunal'}</button>\r\n//         {tribunalAtivo && <button type=\"button\" onClick={resetarFormulario}>Cancelar Edição</button>}\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default TribunaisAdmin;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}