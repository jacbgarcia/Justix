{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vinic\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\React project\\\\justix\\\\src\\\\components\\\\BDPages\\\\Feedbacks\\\\ForunsListFeed.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useParams, useNavigate } from 'react-router-dom';\n\n// const ForunsListFeed = () => {\n//     const { id_forum } = useParams();\n//     const navigate = useNavigate();\n//     const [comments, setComments] = useState([]);\n//     const [newComment, setNewComment] = useState('');\n//     const [rating, setRating] = useState(1);\n//     const [averageRating, setAverageRating] = useState(0);\n//     const [protocolNumber, setProtocolNumber] = useState('');\n//     const [arrivalTime, setArrivalTime] = useState('');\n//     const [departureTime, setDepartureTime] = useState('');\n//     const [isLoading, setIsLoading] = useState(false);\n//     const [error, setError] = useState('');\n\n//     useEffect(() => {\n//         // Recupera os dados do usuário do localStorage\n//         const usuarioData = localStorage.getItem('usuarios');\n//         const token = localStorage.getItem('token');\n\n//         if (!usuarioData || !token) {\n//             alert('Você precisa estar logado para acessar esta página');\n//             navigate('/login');\n//             return;\n//         }\n\n//         fetchData();\n//     }, [id_forum, navigate]);\n\n//     const fetchData = async () => {\n//         try {\n//             setIsLoading(true);\n//             setError('');\n\n//             // Busca comentários e média em paralelo\n//             const [commentsResponse, averageResponse] = await Promise.all([\n//                 axios.get(`http://localhost:3001/av_foruns/${id_forum}`),\n//                 axios.get(`http://localhost:3001/foruns/${id_forum}/avaliacao`)\n//             ]);\n\n//             setComments(commentsResponse.data);\n//             setAverageRating(averageResponse.data.media_avaliacao);\n//         } catch (error) {\n//             console.error('Erro ao carregar dados:', error);\n//             setError('Erro ao carregar os comentários. Por favor, tente novamente.');\n//         } finally {\n//             setIsLoading(false);\n//         }\n//     };\n\n//     const handleSubmitComment = async (e) => {\n//         e.preventDefault();\n//         setError('');\n\n//         // Recupera os dados do usuário do localStorage\n//         const usuarioData = localStorage.getItem('usuarios');\n//         if (!usuarioData) {\n//             alert('Você precisa estar logado para comentar');\n//             navigate('/login');\n//             return;\n//         }\n\n//         const usuario = JSON.parse(usuarioData);\n\n//         try {\n//             setIsLoading(true);\n\n//             const commentData = {\n//                 id_usuario: usuario.id, // Usando o ID do usuário do objeto armazenado\n//                 id_forum: parseInt(id_forum),\n//                 numero_protocolo: protocolNumber,\n//                 comentario: newComment,\n//                 avaliacao: parseInt(rating),\n//                 horario_chegada: arrivalTime || null,\n//                 horario_saida: departureTime || null\n//             };\n\n//             console.log('Enviando dados:', commentData);\n\n//             const response = await axios.post('http://localhost:3001/av_foruns', commentData);\n\n//             if (response.data.success) {\n//                 // Limpa o formulário\n//                 setNewComment('');\n//                 setRating(1);\n//                 setProtocolNumber('');\n//                 setArrivalTime('');\n//                 setDepartureTime('');\n\n//                 // Atualiza os dados\n//                 await fetchData();\n\n//                 alert('Comentário adicionado com sucesso!');\n//             }\n//         } catch (error) {\n//             console.error('Erro ao adicionar comentário:', error);\n//             setError(error.response?.data?.error || 'Erro ao adicionar comentário');\n//         } finally {\n//             setIsLoading(false);\n//         }\n//     };\n\n//     if (isLoading) {\n//         return <div>Carregando...</div>;\n//     }\n\n//     return (\n//         <div className=\"p-4 max-w-4xl mx-auto\">\n//             <h2 className=\"text-2xl font-bold mb-4\">Comentários do Fórum</h2>\n//             <h3 className=\"text-xl mb-4\">\n//                 Média de Avaliação: {'★'.repeat(Math.round(averageRating))} ({averageRating.toFixed(1)})\n//             </h3>\n\n//             {error && (\n//                 <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n//                     {error}\n//                 </div>\n//             )}\n\n//             <form onSubmit={handleSubmitComment} className=\"space-y-4 mb-8\">\n//                 <div>\n//                     <label className=\"block mb-2\">\n//                         Número de Protocolo:\n//                         <input\n//                             type=\"text\"\n//                             value={protocolNumber}\n//                             onChange={(e) => setProtocolNumber(e.target.value)}\n//                             required\n//                             minLength=\"5\"\n//                             maxLength=\"20\"\n//                             className=\"w-full p-2 border rounded\"\n//                         />\n//                     </label>\n//                 </div>\n\n//                 <div>\n//                     <label className=\"block mb-2\">\n//                         Comentário:\n//                         <textarea\n//                             value={newComment}\n//                             onChange={(e) => setNewComment(e.target.value)}\n//                             required\n//                             className=\"w-full p-2 border rounded\"\n//                             rows=\"4\"\n//                         />\n//                     </label>\n//                 </div>\n\n//                 <div>\n//                     <label className=\"block mb-2\">\n//                         Avaliação:\n//                         <select \n//                             value={rating}\n//                             onChange={(e) => setRating(e.target.value)}\n//                             className=\"w-full p-2 border rounded\"\n//                         >\n//                             {[1, 2, 3, 4, 5].map((star) => (\n//                                 <option key={star} value={star}>\n//                                     {'★'.repeat(star)} ({star})\n//                                 </option>\n//                             ))}\n//                         </select>\n//                     </label>\n//                 </div>\n\n//                 <div className=\"grid grid-cols-2 gap-4\">\n//                     <label className=\"block\">\n//                         Horário de Chegada:\n//                         <input\n//                             type=\"time\"\n//                             value={arrivalTime}\n//                             onChange={(e) => setArrivalTime(e.target.value)}\n//                             className=\"w-full p-2 border rounded\"\n//                         />\n//                     </label>\n\n//                     <label className=\"block\">\n//                         Horário de Saída:\n//                         <input\n//                             type=\"time\"\n//                             value={departureTime}\n//                             onChange={(e) => setDepartureTime(e.target.value)}\n//                             className=\"w-full p-2 border rounded\"\n//                         />\n//                     </label>\n//                 </div>\n\n//                 <button \n//                     type=\"submit\"\n//                     disabled={isLoading}\n//                     className=\"w-full bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600 disabled:bg-blue-300\"\n//                 >\n//                     {isLoading ? 'Enviando...' : 'Enviar Comentário'}\n//                 </button>\n//             </form>\n\n//             <div className=\"space-y-4\">\n//                 <h4 className=\"text-lg font-bold\">Comentários</h4>\n//                 {comments.length > 0 ? (\n//                     comments.map((comment, index) => (\n//                         <div key={index} className=\"border rounded p-4\">\n//                             <div className=\"flex justify-between items-center mb-2\">\n//                                 <strong>{comment.nome}</strong>\n//                                 <span>{'★'.repeat(comment.avaliacao)} ({comment.avaliacao})</span>\n//                             </div>\n//                             <p className=\"mb-2\">{comment.comentario}</p>\n//                             <p className=\"text-sm text-gray-600\">\n//                                 {new Date(comment.data_criacao).toLocaleString()}\n//                             </p>\n//                         </div>\n//                     ))\n//                 ) : (\n//                     <p className=\"text-gray-600\">Nenhum comentário ainda.</p>\n//                 )}\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default ForunsListFeed;\n\n// ForunsListFeed.js\n// import React, { useState, useEffect } from 'react';\n// import ContainerHome from '../../ContainerHome/index'\n// import axios from 'axios';\n// import { useParams, useNavigate } from 'react-router-dom';\n// import { Link } from 'react-router-dom';\n//  // Importa o novo componente\n\n// const ForunsListFeed = () => {\n//     const { id_forum } = useParams();\n//     const navigate = useNavigate();\n//     const [comments, setComments] = useState([]);\n//     const [averageRating, setAverageRating] = useState(0);\n//     const [isLoading, setIsLoading] = useState(false);\n//     const [error, setError] = useState('');\n\n//     useEffect(() => {\n//         // Recupera os dados do usuário do localStorage\n//         const usuarioData = localStorage.getItem('usuarios');\n//         const token = localStorage.getItem('token');\n\n//         if (!usuarioData || !token) {\n//             alert('Você precisa estar logado para acessar esta página');\n//             navigate('/login');\n//             return;\n//         }\n\n//         fetchData();\n//     }, [id_forum, navigate]);\n\n//     const fetchData = async () => {\n//         try {\n//             setIsLoading(true);\n//             setError('');\n\n//             // Busca comentários e média em paralelo\n//             const [commentsResponse, averageResponse] = await Promise.all([\n//                 axios.get(`http://localhost:3001/av_foruns/${id_forum}`),\n//                 axios.get(`http://localhost:3001/foruns/${id_forum}/avaliacao`)\n//             ]);\n\n//             setComments(commentsResponse.data);\n//             setAverageRating(averageResponse.data.media_avaliacao);\n//         } catch (error) {\n//             console.error('Erro ao carregar dados:', error);\n//             setError('Erro ao carregar os comentários. Por favor, tente novamente.');\n//         } finally {\n//             setIsLoading(false);\n//         }\n//     };\n\n//     if (isLoading) {\n//         return <div>Carregando...</div>;\n//     }\n\n//     return (\n//         <ContainerHome>\n//         <div className=\"p-4 max-w-4xl mx-auto\">\n//             <Link to={`/user/dashboard/foruns/${id_forum}/feedback/add`}>Reaizar Feedback?</Link>\n//             <h2 className=\"text-2xl font-bold mb-4\">Comentários do Fórum</h2>\n//             <h3 className=\"text-xl mb-4\">\n//                 Média de Avaliação: {'★'.repeat(Math.round(averageRating))} ({averageRating.toFixed(1)})\n//             </h3>\n\n//             {error && (\n//                 <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n//                     {error}\n//                 </div>\n//             )}\n\n//             <div className=\"space-y-4\">\n//                 <h4 className=\"text-lg font-bold\">Comentários</h4>\n//                 {comments.length > 0 ? (\n//                     comments.map((comment, index) => (\n//                         <div key={index} className=\"border rounded p-4\">\n//                             <div className=\"flex justify-between items-center mb-2\">\n//                                 <strong>{comment.nome}</strong>\n//                                 <span>{'★'.repeat(comment.avaliacao)} ({comment.avaliacao})</span>\n//                             </div>\n//                             <p className=\"mb-2\">{comment.comentario}</p>\n//                             <p className=\"text-sm text-gray-600\">\n//                                 {new Date(comment.data_criacao).toLocaleString()}\n//                             </p>\n//                         </div>\n//                     ))\n//                 ) : (\n//                     <p className=\"text-gray-600\">Nenhum comentário ainda.</p>\n//                 )}\n//             </div>\n//         </div>\n//         </ContainerHome>\n//     );\n// };\n\n// export default ForunsListFeed;\n\n// ForunsListFeed.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForunsListFeed = ({\n  id_forum\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [averageRating, setAverageRating] = useState(0);\n  useEffect(() => {\n    fetchComments();\n    fetchAverageRating();\n  }, [id_forum]);\n  const fetchComments = async () => {\n    try {\n      const res = await axios.get(`http://localhost:3001/av_foruns/${id_forum}`);\n      setComments(res.data);\n    } catch (error) {\n      console.error('Erro ao buscar comentários:', error);\n    }\n  };\n  const fetchAverageRating = async () => {\n    try {\n      const res = await axios.get(`http://localhost:3001/foruns/${id_forum}/avaliacao`);\n      setAverageRating(res.data.media_avaliacao || 0);\n    } catch (error) {\n      console.error('Erro ao calcular média de avaliações:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ContainerHome, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/user/dashboard/foruns/${id_forum}/feedback/add`,\n        children: \"Reaizar Feedback?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"M\\xE9dia de Avalia\\xE7\\xE3o: \\u2605 \", averageRating.toFixed(1)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Coment\\xE1rios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 13\n      }, this), comments.length > 0 ? comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: comment.nome\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 28\n          }, this), \" - Avalia\\xE7\\xE3o: \\u2605 \", comment.avaliacao]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.comentario\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Data: \", new Date(comment.data_criacao).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 21\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Sem coment\\xE1rios para este f\\xF3rum.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 355,\n    columnNumber: 9\n  }, this);\n};\n_s(ForunsListFeed, \"nW3h9T+p81ZmmNxy6pqYbdeF3uo=\");\n_c = ForunsListFeed;\nexport default ForunsListFeed;\nvar _c;\n$RefreshReg$(_c, \"ForunsListFeed\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","jsxDEV","_jsxDEV","ForunsListFeed","id_forum","_s","comments","setComments","averageRating","setAverageRating","fetchComments","fetchAverageRating","res","get","data","error","console","media_avaliacao","ContainerHome","children","to","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","length","map","comment","index","nome","avaliacao","comentario","Date","data_criacao","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/vinic/OneDrive/Área de Trabalho/React project/justix/src/components/BDPages/Feedbacks/ForunsListFeed.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import { useParams, useNavigate } from 'react-router-dom';\r\n\r\n// const ForunsListFeed = () => {\r\n//     const { id_forum } = useParams();\r\n//     const navigate = useNavigate();\r\n//     const [comments, setComments] = useState([]);\r\n//     const [newComment, setNewComment] = useState('');\r\n//     const [rating, setRating] = useState(1);\r\n//     const [averageRating, setAverageRating] = useState(0);\r\n//     const [protocolNumber, setProtocolNumber] = useState('');\r\n//     const [arrivalTime, setArrivalTime] = useState('');\r\n//     const [departureTime, setDepartureTime] = useState('');\r\n//     const [isLoading, setIsLoading] = useState(false);\r\n//     const [error, setError] = useState('');\r\n\r\n//     useEffect(() => {\r\n//         // Recupera os dados do usuário do localStorage\r\n//         const usuarioData = localStorage.getItem('usuarios');\r\n//         const token = localStorage.getItem('token');\r\n\r\n//         if (!usuarioData || !token) {\r\n//             alert('Você precisa estar logado para acessar esta página');\r\n//             navigate('/login');\r\n//             return;\r\n//         }\r\n\r\n//         fetchData();\r\n//     }, [id_forum, navigate]);\r\n\r\n//     const fetchData = async () => {\r\n//         try {\r\n//             setIsLoading(true);\r\n//             setError('');\r\n\r\n//             // Busca comentários e média em paralelo\r\n//             const [commentsResponse, averageResponse] = await Promise.all([\r\n//                 axios.get(`http://localhost:3001/av_foruns/${id_forum}`),\r\n//                 axios.get(`http://localhost:3001/foruns/${id_forum}/avaliacao`)\r\n//             ]);\r\n\r\n//             setComments(commentsResponse.data);\r\n//             setAverageRating(averageResponse.data.media_avaliacao);\r\n//         } catch (error) {\r\n//             console.error('Erro ao carregar dados:', error);\r\n//             setError('Erro ao carregar os comentários. Por favor, tente novamente.');\r\n//         } finally {\r\n//             setIsLoading(false);\r\n//         }\r\n//     };\r\n\r\n//     const handleSubmitComment = async (e) => {\r\n//         e.preventDefault();\r\n//         setError('');\r\n\r\n//         // Recupera os dados do usuário do localStorage\r\n//         const usuarioData = localStorage.getItem('usuarios');\r\n//         if (!usuarioData) {\r\n//             alert('Você precisa estar logado para comentar');\r\n//             navigate('/login');\r\n//             return;\r\n//         }\r\n\r\n//         const usuario = JSON.parse(usuarioData);\r\n        \r\n//         try {\r\n//             setIsLoading(true);\r\n            \r\n//             const commentData = {\r\n//                 id_usuario: usuario.id, // Usando o ID do usuário do objeto armazenado\r\n//                 id_forum: parseInt(id_forum),\r\n//                 numero_protocolo: protocolNumber,\r\n//                 comentario: newComment,\r\n//                 avaliacao: parseInt(rating),\r\n//                 horario_chegada: arrivalTime || null,\r\n//                 horario_saida: departureTime || null\r\n//             };\r\n\r\n//             console.log('Enviando dados:', commentData);\r\n\r\n//             const response = await axios.post('http://localhost:3001/av_foruns', commentData);\r\n\r\n//             if (response.data.success) {\r\n//                 // Limpa o formulário\r\n//                 setNewComment('');\r\n//                 setRating(1);\r\n//                 setProtocolNumber('');\r\n//                 setArrivalTime('');\r\n//                 setDepartureTime('');\r\n                \r\n//                 // Atualiza os dados\r\n//                 await fetchData();\r\n                \r\n//                 alert('Comentário adicionado com sucesso!');\r\n//             }\r\n//         } catch (error) {\r\n//             console.error('Erro ao adicionar comentário:', error);\r\n//             setError(error.response?.data?.error || 'Erro ao adicionar comentário');\r\n//         } finally {\r\n//             setIsLoading(false);\r\n//         }\r\n//     };\r\n\r\n//     if (isLoading) {\r\n//         return <div>Carregando...</div>;\r\n//     }\r\n\r\n//     return (\r\n//         <div className=\"p-4 max-w-4xl mx-auto\">\r\n//             <h2 className=\"text-2xl font-bold mb-4\">Comentários do Fórum</h2>\r\n//             <h3 className=\"text-xl mb-4\">\r\n//                 Média de Avaliação: {'★'.repeat(Math.round(averageRating))} ({averageRating.toFixed(1)})\r\n//             </h3>\r\n\r\n//             {error && (\r\n//                 <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\r\n//                     {error}\r\n//                 </div>\r\n//             )}\r\n\r\n//             <form onSubmit={handleSubmitComment} className=\"space-y-4 mb-8\">\r\n//                 <div>\r\n//                     <label className=\"block mb-2\">\r\n//                         Número de Protocolo:\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             value={protocolNumber}\r\n//                             onChange={(e) => setProtocolNumber(e.target.value)}\r\n//                             required\r\n//                             minLength=\"5\"\r\n//                             maxLength=\"20\"\r\n//                             className=\"w-full p-2 border rounded\"\r\n//                         />\r\n//                     </label>\r\n//                 </div>\r\n\r\n//                 <div>\r\n//                     <label className=\"block mb-2\">\r\n//                         Comentário:\r\n//                         <textarea\r\n//                             value={newComment}\r\n//                             onChange={(e) => setNewComment(e.target.value)}\r\n//                             required\r\n//                             className=\"w-full p-2 border rounded\"\r\n//                             rows=\"4\"\r\n//                         />\r\n//                     </label>\r\n//                 </div>\r\n\r\n//                 <div>\r\n//                     <label className=\"block mb-2\">\r\n//                         Avaliação:\r\n//                         <select \r\n//                             value={rating}\r\n//                             onChange={(e) => setRating(e.target.value)}\r\n//                             className=\"w-full p-2 border rounded\"\r\n//                         >\r\n//                             {[1, 2, 3, 4, 5].map((star) => (\r\n//                                 <option key={star} value={star}>\r\n//                                     {'★'.repeat(star)} ({star})\r\n//                                 </option>\r\n//                             ))}\r\n//                         </select>\r\n//                     </label>\r\n//                 </div>\r\n\r\n//                 <div className=\"grid grid-cols-2 gap-4\">\r\n//                     <label className=\"block\">\r\n//                         Horário de Chegada:\r\n//                         <input\r\n//                             type=\"time\"\r\n//                             value={arrivalTime}\r\n//                             onChange={(e) => setArrivalTime(e.target.value)}\r\n//                             className=\"w-full p-2 border rounded\"\r\n//                         />\r\n//                     </label>\r\n\r\n//                     <label className=\"block\">\r\n//                         Horário de Saída:\r\n//                         <input\r\n//                             type=\"time\"\r\n//                             value={departureTime}\r\n//                             onChange={(e) => setDepartureTime(e.target.value)}\r\n//                             className=\"w-full p-2 border rounded\"\r\n//                         />\r\n//                     </label>\r\n//                 </div>\r\n\r\n//                 <button \r\n//                     type=\"submit\"\r\n//                     disabled={isLoading}\r\n//                     className=\"w-full bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600 disabled:bg-blue-300\"\r\n//                 >\r\n//                     {isLoading ? 'Enviando...' : 'Enviar Comentário'}\r\n//                 </button>\r\n//             </form>\r\n\r\n//             <div className=\"space-y-4\">\r\n//                 <h4 className=\"text-lg font-bold\">Comentários</h4>\r\n//                 {comments.length > 0 ? (\r\n//                     comments.map((comment, index) => (\r\n//                         <div key={index} className=\"border rounded p-4\">\r\n//                             <div className=\"flex justify-between items-center mb-2\">\r\n//                                 <strong>{comment.nome}</strong>\r\n//                                 <span>{'★'.repeat(comment.avaliacao)} ({comment.avaliacao})</span>\r\n//                             </div>\r\n//                             <p className=\"mb-2\">{comment.comentario}</p>\r\n//                             <p className=\"text-sm text-gray-600\">\r\n//                                 {new Date(comment.data_criacao).toLocaleString()}\r\n//                             </p>\r\n//                         </div>\r\n//                     ))\r\n//                 ) : (\r\n//                     <p className=\"text-gray-600\">Nenhum comentário ainda.</p>\r\n//                 )}\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default ForunsListFeed;\r\n\r\n\r\n// ForunsListFeed.js\r\n// import React, { useState, useEffect } from 'react';\r\n// import ContainerHome from '../../ContainerHome/index'\r\n// import axios from 'axios';\r\n// import { useParams, useNavigate } from 'react-router-dom';\r\n// import { Link } from 'react-router-dom';\r\n//  // Importa o novo componente\r\n\r\n// const ForunsListFeed = () => {\r\n//     const { id_forum } = useParams();\r\n//     const navigate = useNavigate();\r\n//     const [comments, setComments] = useState([]);\r\n//     const [averageRating, setAverageRating] = useState(0);\r\n//     const [isLoading, setIsLoading] = useState(false);\r\n//     const [error, setError] = useState('');\r\n\r\n//     useEffect(() => {\r\n//         // Recupera os dados do usuário do localStorage\r\n//         const usuarioData = localStorage.getItem('usuarios');\r\n//         const token = localStorage.getItem('token');\r\n\r\n//         if (!usuarioData || !token) {\r\n//             alert('Você precisa estar logado para acessar esta página');\r\n//             navigate('/login');\r\n//             return;\r\n//         }\r\n\r\n//         fetchData();\r\n//     }, [id_forum, navigate]);\r\n\r\n//     const fetchData = async () => {\r\n//         try {\r\n//             setIsLoading(true);\r\n//             setError('');\r\n\r\n//             // Busca comentários e média em paralelo\r\n//             const [commentsResponse, averageResponse] = await Promise.all([\r\n//                 axios.get(`http://localhost:3001/av_foruns/${id_forum}`),\r\n//                 axios.get(`http://localhost:3001/foruns/${id_forum}/avaliacao`)\r\n//             ]);\r\n\r\n//             setComments(commentsResponse.data);\r\n//             setAverageRating(averageResponse.data.media_avaliacao);\r\n//         } catch (error) {\r\n//             console.error('Erro ao carregar dados:', error);\r\n//             setError('Erro ao carregar os comentários. Por favor, tente novamente.');\r\n//         } finally {\r\n//             setIsLoading(false);\r\n//         }\r\n//     };\r\n\r\n//     if (isLoading) {\r\n//         return <div>Carregando...</div>;\r\n//     }\r\n\r\n//     return (\r\n//         <ContainerHome>\r\n//         <div className=\"p-4 max-w-4xl mx-auto\">\r\n//             <Link to={`/user/dashboard/foruns/${id_forum}/feedback/add`}>Reaizar Feedback?</Link>\r\n//             <h2 className=\"text-2xl font-bold mb-4\">Comentários do Fórum</h2>\r\n//             <h3 className=\"text-xl mb-4\">\r\n//                 Média de Avaliação: {'★'.repeat(Math.round(averageRating))} ({averageRating.toFixed(1)})\r\n//             </h3>\r\n\r\n//             {error && (\r\n//                 <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\r\n//                     {error}\r\n//                 </div>\r\n//             )}\r\n\r\n\r\n//             <div className=\"space-y-4\">\r\n//                 <h4 className=\"text-lg font-bold\">Comentários</h4>\r\n//                 {comments.length > 0 ? (\r\n//                     comments.map((comment, index) => (\r\n//                         <div key={index} className=\"border rounded p-4\">\r\n//                             <div className=\"flex justify-between items-center mb-2\">\r\n//                                 <strong>{comment.nome}</strong>\r\n//                                 <span>{'★'.repeat(comment.avaliacao)} ({comment.avaliacao})</span>\r\n//                             </div>\r\n//                             <p className=\"mb-2\">{comment.comentario}</p>\r\n//                             <p className=\"text-sm text-gray-600\">\r\n//                                 {new Date(comment.data_criacao).toLocaleString()}\r\n//                             </p>\r\n//                         </div>\r\n//                     ))\r\n//                 ) : (\r\n//                     <p className=\"text-gray-600\">Nenhum comentário ainda.</p>\r\n//                 )}\r\n//             </div>\r\n//         </div>\r\n//         </ContainerHome>\r\n//     );\r\n// };\r\n\r\n// export default ForunsListFeed;\r\n\r\n// ForunsListFeed.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ForunsListFeed = ({ id_forum }) => {\r\n    const [comments, setComments] = useState([]);\r\n    const [averageRating, setAverageRating] = useState(0);\r\n\r\n    useEffect(() => {\r\n        fetchComments();\r\n        fetchAverageRating();\r\n    }, [id_forum]);\r\n\r\n    const fetchComments = async () => {\r\n        try {\r\n            const res = await axios.get(`http://localhost:3001/av_foruns/${id_forum}`);\r\n            setComments(res.data);\r\n        } catch (error) {\r\n            console.error('Erro ao buscar comentários:', error);\r\n        }\r\n    };\r\n\r\n    const fetchAverageRating = async () => {\r\n        try {\r\n            const res = await axios.get(`http://localhost:3001/foruns/${id_forum}/avaliacao`);\r\n            setAverageRating(res.data.media_avaliacao || 0);\r\n        } catch (error) {\r\n            console.error('Erro ao calcular média de avaliações:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ContainerHome>\r\n        <div>\r\n            <Link to={`/user/dashboard/foruns/${id_forum}/feedback/add`}>Reaizar Feedback?</Link>\r\n            <h3>Média de Avaliação: ★ {averageRating.toFixed(1)}</h3>\r\n            <h4>Comentários</h4>\r\n            {comments.length > 0 ? (\r\n                comments.map((comment, index) => (\r\n                    <div key={index}>\r\n                        <p><strong>{comment.nome}</strong> - Avaliação: ★ {comment.avaliacao}</p>\r\n                        <p>{comment.comentario}</p>\r\n                        <p>Data: {new Date(comment.data_criacao).toLocaleDateString()}</p>\r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <p>Sem comentários para este fórum.</p>\r\n            )}\r\n        </div>\r\n        </ContainerHome>\r\n    );\r\n};\r\n\r\nexport default ForunsListFeed;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}