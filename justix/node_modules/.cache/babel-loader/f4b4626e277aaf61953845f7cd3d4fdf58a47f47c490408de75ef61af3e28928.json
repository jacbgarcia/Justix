{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vinic\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\React project\\\\justix\\\\src\\\\pages\\\\Cadastro\\\\index.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { Link, useNavigate } from 'react-router-dom';\n// import styles from './Cadastro.module.css';\n// import Header from '../../components/Header';\n// import Footer from '../../components/Footer';\n// import ContainerHome from '../../components/ContainerHome';\n\n// function Cadastro() {\n//     const navigate = useNavigate();\n\n//     const [formData, setFormData] = useState({\n//         nome: '',\n//         cpf: '',\n//         email: '',\n//         telefone: '',\n//         senha: '',\n//         confirmarSenha: ''\n//     });\n\n//     const [errors, setErrors] = useState({\n//         nome: '',\n//         cpf: '',\n//         email: '',\n//         telefone: '',\n//         senha: '',\n//         confirmarSenha: ''\n//     });\n\n//     const [submitStatus, setSubmitStatus] = useState({\n//         message: '',\n//         type: ''\n//     });\n\n//     const formatCPF = (value) => {\n//         return value\n//             .replace(/\\D/g, '')\n//             .replace(/(\\d{3})(\\d)/, '$1.$2')\n//             .replace(/(\\d{3})(\\d)/, '$1.$2')\n//             .replace(/(\\d{3})(\\d{1,2})/, '$1-$2')\n//             .replace(/(-\\d{2})\\d+?$/, '$1');\n//     };\n\n//     const formatTelefone = (value) => {\n//         return value\n//             .replace(/\\D/g, '')\n//             .replace(/(\\d{2})(\\d)/, '($1) $2')\n//             .replace(/(\\d{5})(\\d)/, '$1-$2')\n//             .replace(/(-\\d{4})\\d+?$/, '$1');\n//     };\n\n//     const validateField = (name, value) => {\n//         switch (name) {\n//             case 'nome':\n//                 return value.length < 3 ? 'Nome deve ter pelo menos 3 caracteres' : '';\n//             case 'cpf':\n//                 return value.replace(/\\D/g, '').length !== 11 \n//                     ? 'CPF deve ter 11 dígitos' \n//                     : '';\n//             case 'email':\n//                 return !value.includes('@') || !value.includes('.com')\n//                     ? 'Email deve conter @ e .com'\n//                     : '';\n//             case 'telefone':\n//                 return value.replace(/\\D/g, '').length < 11\n//                     ? 'Telefone deve ter 11 dígitos'\n//                     : '';\n//             case 'senha':\n//                 return value.length < 6\n//                     ? 'Senha deve ter pelo menos 6 caracteres'\n//                     : '';\n//             case 'confirmarSenha':\n//                 return value !== formData.senha\n//                     ? 'As senhas não coincidem'\n//                     : '';\n//             default:\n//                 return '';\n//         }\n//     };\n\n//     const handleInputChange = (e) => {\n//         const { id, value } = e.target;\n//         let formattedValue = value;\n\n//         if (id === 'cpf') {\n//             formattedValue = formatCPF(value);\n//         } else if (id === 'telefone') {\n//             formattedValue = formatTelefone(value);\n//         }\n\n//         setFormData((prevState) => ({\n//             ...prevState,\n//             [id]: formattedValue\n//         }));\n\n//         const error = validateField(id, formattedValue);\n//         setErrors((prevState) => ({\n//             ...prevState,\n//             [id]: error\n//         }));\n\n//         if (id === 'senha') {\n//             const confirmarSenhaError = formData.confirmarSenha\n//                 ? validateField('confirmarSenha', formData.confirmarSenha)\n//                 : '';\n//             setErrors((prevState) => ({\n//                 ...prevState,\n//                 confirmarSenha: confirmarSenhaError\n//             }));\n//         }\n//     };\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n\n//         try {\n//             console.log('Enviando dados:', formData); // Log dos dados enviados\n\n//             const response = await fetch('http://localhost:3001/usuarios', {\n//                 method: 'POST',\n//                 headers: {\n//                     'Content-Type': 'application/json'\n//                 },\n//                 body: JSON.stringify({\n//                     nome: formData.nome,\n//                     cpf: formData.cpf.replace(/\\D/g, ''),\n//                     email: formData.email,\n//                     telefone: formData.telefone.replace(/\\D/g, ''),\n//                     senha: formData.senha\n//                 })\n//             });\n\n//             const data = await response.json();\n//             console.log('Resposta do servidor:', data); // Log da resposta\n\n//             if (response.ok) {\n//                 setSubmitStatus({\n//                     message: 'Cadastro realizado com sucesso!',\n//                     type: 'success'\n//                 });\n//                 setTimeout(() => navigate('/login'), 2000);\n//             } else {\n//                 throw new Error(data.error || 'Erro ao realizar cadastro');\n//             }\n//         } catch (error) {\n//             console.error('Erro no cadastro:', error);\n//             setSubmitStatus({\n//                 message: error.message || 'Erro ao conectar com o servidor',\n//                 type: 'error'\n//             });\n//         }\n//     };\n//     return (\n\n//             <>\n//             <Header> \n//             <div className={styles.navleft}>\n//             <Link to=\"/login\" className={styles.navlinksl}>Login</Link>\n//             <Link to=\"/info\" className={styles.navlinks}>Sobre nós</Link>\n//             </div>\n//             </Header>\n//             <ContainerHome>\n//                 <section className={styles.cadastroSection}>\n//                     <div className={styles.cadastroContainer}>\n//                         <Link to=\"/\" className={styles.backButton}>← Voltar</Link>\n//                         <h2 className={styles.title}>Cadastro</h2>\n\n//                         {submitStatus.message && (\n//                             <div className={`${styles.statusMessage} ${styles[submitStatus.type]}`}>\n//                                 {submitStatus.message}\n//                             </div>\n//                         )}\n\n//                         <form onSubmit={handleSubmit} className={styles.cadastroForm}>\n//                             <div className={styles.formGroup}>\n//                                 <label htmlFor=\"nome\">Nome:</label>\n//                                 <input\n//                                     type=\"text\"\n//                                     id=\"nome\"\n//                                     value={formData.nome}\n//                                     onChange={handleInputChange}\n//                                     required\n//                                 />\n//                                 {errors.nome && <span className={styles.errorText}>{errors.nome}</span>}\n//                             </div>\n\n//                             <div className={styles.formGroup}>\n//                                 <label htmlFor=\"cpf\">CPF:</label>\n//                                 <input\n//                                     type=\"text\"\n//                                     id=\"cpf\"\n//                                     value={formData.cpf}\n//                                     onChange={handleInputChange}\n//                                     required\n//                                     maxLength=\"14\"\n//                                 />\n//                                 {errors.cpf && <span className={styles.errorText}>{errors.cpf}</span>}\n//                             </div>\n\n//                             <div className={styles.formGroup}>\n//                                 <label htmlFor=\"email\">E-mail:</label>\n//                                 <input\n//                                     type=\"email\"\n//                                     id=\"email\"\n//                                     value={formData.email}\n//                                     onChange={handleInputChange}\n//                                     required\n//                                 />\n//                                 {errors.email && <span className={styles.errorText}>{errors.email}</span>}\n//                             </div>\n\n//                             <div className={styles.formGroup}>\n//                                 <label htmlFor=\"telefone\">Telefone:</label>\n//                                 <input\n//                                     type=\"text\"\n//                                     id=\"telefone\"\n//                                     value={formData.telefone}\n//                                     onChange={handleInputChange}\n//                                     required\n//                                     maxLength=\"15\"\n//                                 />\n//                                 {errors.telefone && <span className={styles.errorText}>{errors.telefone}</span>}\n//                             </div>\n\n//                             <div className={styles.formGroup}>\n//                                 <label htmlFor=\"senha\">Senha:</label>\n//                                 <input\n//                                     type=\"password\"\n//                                     id=\"senha\"\n//                                     value={formData.senha}\n//                                     onChange={handleInputChange}\n//                                     required\n//                                 />\n//                                 {errors.senha && <span className={styles.errorText}>{errors.senha}</span>}\n//                             </div>\n\n//                             <div className={styles.formGroup}>\n//                                 <label htmlFor=\"confirmarSenha\">Confirmar Senha:</label>\n//                                 <input\n//                                     type=\"password\"\n//                                     id=\"confirmarSenha\"\n//                                     value={formData.confirmarSenha}\n//                                     onChange={handleInputChange}\n//                                     required\n//                                 />\n//                                 {errors.confirmarSenha && (\n//                                     <span className={styles.errorText}>{errors.confirmarSenha}</span>\n//                                 )}\n//                             </div>\n\n//                             <button type=\"submit\" className={styles.submitButton}>Cadastrar</button>\n//                         </form>\n//                     </div>\n//                 </section>\n//             </ContainerHome>\n//             <Footer />\n//         </>\n//     );\n// }\n\n// export default Cadastro;\n\nimport React, { useState } from 'react';\nimport styles from './Cadastro.module.css'; // Supondo que você tenha um arquivo de estilo para o cadastro\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cadastro = ({\n  onClose\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    nome: '',\n    email: '',\n    senha: '',\n    confirmSenha: ''\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Aqui você pode adicionar a lógica para enviar os dados do formulário\n    console.log('Dados do formulário:', formData);\n\n    // Limpar o formulário após o envio (opcional)\n    setFormData({\n      nome: '',\n      email: '',\n      senha: '',\n      confirmSenha: ''\n    });\n\n    // Fechar o sidebar após o envio (opcional)\n    onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.sidebar,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.overlay,\n      onClick: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.content,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cadastro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: styles.form,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"nome\",\n            children: \"Nome:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"nome\",\n            name: \"nome\",\n            value: formData.nome,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            value: formData.email,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"senha\",\n            children: \"Senha:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"senha\",\n            name: \"senha\",\n            value: formData.senha,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmSenha\",\n            children: \"Confirmar Senha:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"confirmSenha\",\n            name: \"confirmSenha\",\n            value: formData.confirmSenha,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.submitButton,\n          children: \"Cadastrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        className: styles.closeButton,\n        children: \"Fechar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 296,\n    columnNumber: 9\n  }, this);\n};\n_s(Cadastro, \"EnzPbT7GTynCwYq/a6DV5pkgGgA=\");\n_c = Cadastro;\nexport default Cadastro;\nvar _c;\n$RefreshReg$(_c, \"Cadastro\");","map":{"version":3,"names":["React","useState","styles","jsxDEV","_jsxDEV","Cadastro","onClose","_s","formData","setFormData","nome","email","senha","confirmSenha","handleChange","e","name","value","target","handleSubmit","preventDefault","console","log","className","sidebar","children","overlay","onClick","fileName","_jsxFileName","lineNumber","columnNumber","content","onSubmit","form","formGroup","htmlFor","type","id","onChange","required","submitButton","closeButton","_c","$RefreshReg$"],"sources":["C:/Users/vinic/OneDrive/Área de Trabalho/React project/justix/src/pages/Cadastro/index.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { Link, useNavigate } from 'react-router-dom';\r\n// import styles from './Cadastro.module.css';\r\n// import Header from '../../components/Header';\r\n// import Footer from '../../components/Footer';\r\n// import ContainerHome from '../../components/ContainerHome';\r\n\r\n// function Cadastro() {\r\n//     const navigate = useNavigate();\r\n\r\n//     const [formData, setFormData] = useState({\r\n//         nome: '',\r\n//         cpf: '',\r\n//         email: '',\r\n//         telefone: '',\r\n//         senha: '',\r\n//         confirmarSenha: ''\r\n//     });\r\n\r\n//     const [errors, setErrors] = useState({\r\n//         nome: '',\r\n//         cpf: '',\r\n//         email: '',\r\n//         telefone: '',\r\n//         senha: '',\r\n//         confirmarSenha: ''\r\n//     });\r\n\r\n//     const [submitStatus, setSubmitStatus] = useState({\r\n//         message: '',\r\n//         type: ''\r\n//     });\r\n\r\n//     const formatCPF = (value) => {\r\n//         return value\r\n//             .replace(/\\D/g, '')\r\n//             .replace(/(\\d{3})(\\d)/, '$1.$2')\r\n//             .replace(/(\\d{3})(\\d)/, '$1.$2')\r\n//             .replace(/(\\d{3})(\\d{1,2})/, '$1-$2')\r\n//             .replace(/(-\\d{2})\\d+?$/, '$1');\r\n//     };\r\n\r\n//     const formatTelefone = (value) => {\r\n//         return value\r\n//             .replace(/\\D/g, '')\r\n//             .replace(/(\\d{2})(\\d)/, '($1) $2')\r\n//             .replace(/(\\d{5})(\\d)/, '$1-$2')\r\n//             .replace(/(-\\d{4})\\d+?$/, '$1');\r\n//     };\r\n\r\n//     const validateField = (name, value) => {\r\n//         switch (name) {\r\n//             case 'nome':\r\n//                 return value.length < 3 ? 'Nome deve ter pelo menos 3 caracteres' : '';\r\n//             case 'cpf':\r\n//                 return value.replace(/\\D/g, '').length !== 11 \r\n//                     ? 'CPF deve ter 11 dígitos' \r\n//                     : '';\r\n//             case 'email':\r\n//                 return !value.includes('@') || !value.includes('.com')\r\n//                     ? 'Email deve conter @ e .com'\r\n//                     : '';\r\n//             case 'telefone':\r\n//                 return value.replace(/\\D/g, '').length < 11\r\n//                     ? 'Telefone deve ter 11 dígitos'\r\n//                     : '';\r\n//             case 'senha':\r\n//                 return value.length < 6\r\n//                     ? 'Senha deve ter pelo menos 6 caracteres'\r\n//                     : '';\r\n//             case 'confirmarSenha':\r\n//                 return value !== formData.senha\r\n//                     ? 'As senhas não coincidem'\r\n//                     : '';\r\n//             default:\r\n//                 return '';\r\n//         }\r\n//     };\r\n\r\n//     const handleInputChange = (e) => {\r\n//         const { id, value } = e.target;\r\n//         let formattedValue = value;\r\n\r\n//         if (id === 'cpf') {\r\n//             formattedValue = formatCPF(value);\r\n//         } else if (id === 'telefone') {\r\n//             formattedValue = formatTelefone(value);\r\n//         }\r\n\r\n//         setFormData((prevState) => ({\r\n//             ...prevState,\r\n//             [id]: formattedValue\r\n//         }));\r\n\r\n//         const error = validateField(id, formattedValue);\r\n//         setErrors((prevState) => ({\r\n//             ...prevState,\r\n//             [id]: error\r\n//         }));\r\n\r\n//         if (id === 'senha') {\r\n//             const confirmarSenhaError = formData.confirmarSenha\r\n//                 ? validateField('confirmarSenha', formData.confirmarSenha)\r\n//                 : '';\r\n//             setErrors((prevState) => ({\r\n//                 ...prevState,\r\n//                 confirmarSenha: confirmarSenhaError\r\n//             }));\r\n//         }\r\n//     };\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n        \r\n//         try {\r\n//             console.log('Enviando dados:', formData); // Log dos dados enviados\r\n    \r\n//             const response = await fetch('http://localhost:3001/usuarios', {\r\n//                 method: 'POST',\r\n//                 headers: {\r\n//                     'Content-Type': 'application/json'\r\n//                 },\r\n//                 body: JSON.stringify({\r\n//                     nome: formData.nome,\r\n//                     cpf: formData.cpf.replace(/\\D/g, ''),\r\n//                     email: formData.email,\r\n//                     telefone: formData.telefone.replace(/\\D/g, ''),\r\n//                     senha: formData.senha\r\n//                 })\r\n//             });\r\n    \r\n//             const data = await response.json();\r\n//             console.log('Resposta do servidor:', data); // Log da resposta\r\n    \r\n//             if (response.ok) {\r\n//                 setSubmitStatus({\r\n//                     message: 'Cadastro realizado com sucesso!',\r\n//                     type: 'success'\r\n//                 });\r\n//                 setTimeout(() => navigate('/login'), 2000);\r\n//             } else {\r\n//                 throw new Error(data.error || 'Erro ao realizar cadastro');\r\n//             }\r\n//         } catch (error) {\r\n//             console.error('Erro no cadastro:', error);\r\n//             setSubmitStatus({\r\n//                 message: error.message || 'Erro ao conectar com o servidor',\r\n//                 type: 'error'\r\n//             });\r\n//         }\r\n//     };\r\n//     return (\r\n       \r\n//             <>\r\n//             <Header> \r\n//             <div className={styles.navleft}>\r\n//             <Link to=\"/login\" className={styles.navlinksl}>Login</Link>\r\n//             <Link to=\"/info\" className={styles.navlinks}>Sobre nós</Link>\r\n//             </div>\r\n//             </Header>\r\n//             <ContainerHome>\r\n//                 <section className={styles.cadastroSection}>\r\n//                     <div className={styles.cadastroContainer}>\r\n//                         <Link to=\"/\" className={styles.backButton}>← Voltar</Link>\r\n//                         <h2 className={styles.title}>Cadastro</h2>\r\n\r\n//                         {submitStatus.message && (\r\n//                             <div className={`${styles.statusMessage} ${styles[submitStatus.type]}`}>\r\n//                                 {submitStatus.message}\r\n//                             </div>\r\n//                         )}\r\n\r\n//                         <form onSubmit={handleSubmit} className={styles.cadastroForm}>\r\n//                             <div className={styles.formGroup}>\r\n//                                 <label htmlFor=\"nome\">Nome:</label>\r\n//                                 <input\r\n//                                     type=\"text\"\r\n//                                     id=\"nome\"\r\n//                                     value={formData.nome}\r\n//                                     onChange={handleInputChange}\r\n//                                     required\r\n//                                 />\r\n//                                 {errors.nome && <span className={styles.errorText}>{errors.nome}</span>}\r\n//                             </div>\r\n\r\n//                             <div className={styles.formGroup}>\r\n//                                 <label htmlFor=\"cpf\">CPF:</label>\r\n//                                 <input\r\n//                                     type=\"text\"\r\n//                                     id=\"cpf\"\r\n//                                     value={formData.cpf}\r\n//                                     onChange={handleInputChange}\r\n//                                     required\r\n//                                     maxLength=\"14\"\r\n//                                 />\r\n//                                 {errors.cpf && <span className={styles.errorText}>{errors.cpf}</span>}\r\n//                             </div>\r\n\r\n//                             <div className={styles.formGroup}>\r\n//                                 <label htmlFor=\"email\">E-mail:</label>\r\n//                                 <input\r\n//                                     type=\"email\"\r\n//                                     id=\"email\"\r\n//                                     value={formData.email}\r\n//                                     onChange={handleInputChange}\r\n//                                     required\r\n//                                 />\r\n//                                 {errors.email && <span className={styles.errorText}>{errors.email}</span>}\r\n//                             </div>\r\n\r\n//                             <div className={styles.formGroup}>\r\n//                                 <label htmlFor=\"telefone\">Telefone:</label>\r\n//                                 <input\r\n//                                     type=\"text\"\r\n//                                     id=\"telefone\"\r\n//                                     value={formData.telefone}\r\n//                                     onChange={handleInputChange}\r\n//                                     required\r\n//                                     maxLength=\"15\"\r\n//                                 />\r\n//                                 {errors.telefone && <span className={styles.errorText}>{errors.telefone}</span>}\r\n//                             </div>\r\n\r\n//                             <div className={styles.formGroup}>\r\n//                                 <label htmlFor=\"senha\">Senha:</label>\r\n//                                 <input\r\n//                                     type=\"password\"\r\n//                                     id=\"senha\"\r\n//                                     value={formData.senha}\r\n//                                     onChange={handleInputChange}\r\n//                                     required\r\n//                                 />\r\n//                                 {errors.senha && <span className={styles.errorText}>{errors.senha}</span>}\r\n//                             </div>\r\n\r\n//                             <div className={styles.formGroup}>\r\n//                                 <label htmlFor=\"confirmarSenha\">Confirmar Senha:</label>\r\n//                                 <input\r\n//                                     type=\"password\"\r\n//                                     id=\"confirmarSenha\"\r\n//                                     value={formData.confirmarSenha}\r\n//                                     onChange={handleInputChange}\r\n//                                     required\r\n//                                 />\r\n//                                 {errors.confirmarSenha && (\r\n//                                     <span className={styles.errorText}>{errors.confirmarSenha}</span>\r\n//                                 )}\r\n//                             </div>\r\n\r\n//                             <button type=\"submit\" className={styles.submitButton}>Cadastrar</button>\r\n//                         </form>\r\n//                     </div>\r\n//                 </section>\r\n//             </ContainerHome>\r\n//             <Footer />\r\n//         </>\r\n//     );\r\n// }\r\n\r\n// export default Cadastro;\r\n\r\nimport React, { useState } from 'react';\r\nimport styles from './Cadastro.module.css'; // Supondo que você tenha um arquivo de estilo para o cadastro\r\n\r\nconst Cadastro = ({ onClose }) => {\r\n    const [formData, setFormData] = useState({\r\n        nome: '',\r\n        email: '',\r\n        senha: '',\r\n        confirmSenha: '',\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({ ...formData, [name]: value });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // Aqui você pode adicionar a lógica para enviar os dados do formulário\r\n        console.log('Dados do formulário:', formData);\r\n\r\n        // Limpar o formulário após o envio (opcional)\r\n        setFormData({\r\n            nome: '',\r\n            email: '',\r\n            senha: '',\r\n            confirmSenha: '',\r\n        });\r\n\r\n        // Fechar o sidebar após o envio (opcional)\r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <div className={styles.sidebar}>\r\n            <div className={styles.overlay} onClick={onClose} /> {/* Overlay para fechar ao clicar fora */}\r\n            <div className={styles.content}>\r\n                <h2>Cadastro</h2>\r\n                <form onSubmit={handleSubmit} className={styles.form}>\r\n                    <div className={styles.formGroup}>\r\n                        <label htmlFor=\"nome\">Nome:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"nome\"\r\n                            name=\"nome\"\r\n                            value={formData.nome}\r\n                            onChange={handleChange}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className={styles.formGroup}>\r\n                        <label htmlFor=\"email\">Email:</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            value={formData.email}\r\n                            onChange={handleChange}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className={styles.formGroup}>\r\n                        <label htmlFor=\"senha\">Senha:</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"senha\"\r\n                            name=\"senha\"\r\n                            value={formData.senha}\r\n                            onChange={handleChange}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className={styles.formGroup}>\r\n                        <label htmlFor=\"confirmSenha\">Confirmar Senha:</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"confirmSenha\"\r\n                            name=\"confirmSenha\"\r\n                            value={formData.confirmSenha}\r\n                            onChange={handleChange}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <button type=\"submit\" className={styles.submitButton}>Cadastrar</button>\r\n                </form>\r\n                <button onClick={onClose} className={styles.closeButton}>Fechar</button> {/* Botão para fechar o sidebar */}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cadastro;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,uBAAuB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC;IACrCS,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,EAAE;IACTC,YAAY,EAAE;EAClB,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,CAAC,IAAK;IACxB,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCT,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACQ,IAAI,GAAGC;IAAM,CAAC,CAAC;EAC/C,CAAC;EAED,MAAME,YAAY,GAAIJ,CAAC,IAAK;IACxBA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB;IACAC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEd,QAAQ,CAAC;;IAE7C;IACAC,WAAW,CAAC;MACRC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE,EAAE;MACTC,YAAY,EAAE;IAClB,CAAC,CAAC;;IAEF;IACAP,OAAO,CAAC,CAAC;EACb,CAAC;EAED,oBACIF,OAAA;IAAKmB,SAAS,EAAErB,MAAM,CAACsB,OAAQ;IAAAC,QAAA,gBAC3BrB,OAAA;MAAKmB,SAAS,EAAErB,MAAM,CAACwB,OAAQ;MAACC,OAAO,EAAErB;IAAQ;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC,eACrD3B,OAAA;MAAKmB,SAAS,EAAErB,MAAM,CAAC8B,OAAQ;MAAAP,QAAA,gBAC3BrB,OAAA;QAAAqB,QAAA,EAAI;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjB3B,OAAA;QAAM6B,QAAQ,EAAEd,YAAa;QAACI,SAAS,EAAErB,MAAM,CAACgC,IAAK;QAAAT,QAAA,gBACjDrB,OAAA;UAAKmB,SAAS,EAAErB,MAAM,CAACiC,SAAU;UAAAV,QAAA,gBAC7BrB,OAAA;YAAOgC,OAAO,EAAC,MAAM;YAAAX,QAAA,EAAC;UAAK;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACnC3B,OAAA;YACIiC,IAAI,EAAC,MAAM;YACXC,EAAE,EAAC,MAAM;YACTtB,IAAI,EAAC,MAAM;YACXC,KAAK,EAAET,QAAQ,CAACE,IAAK;YACrB6B,QAAQ,EAAEzB,YAAa;YACvB0B,QAAQ;UAAA;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACN3B,OAAA;UAAKmB,SAAS,EAAErB,MAAM,CAACiC,SAAU;UAAAV,QAAA,gBAC7BrB,OAAA;YAAOgC,OAAO,EAAC,OAAO;YAAAX,QAAA,EAAC;UAAM;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACrC3B,OAAA;YACIiC,IAAI,EAAC,OAAO;YACZC,EAAE,EAAC,OAAO;YACVtB,IAAI,EAAC,OAAO;YACZC,KAAK,EAAET,QAAQ,CAACG,KAAM;YACtB4B,QAAQ,EAAEzB,YAAa;YACvB0B,QAAQ;UAAA;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACN3B,OAAA;UAAKmB,SAAS,EAAErB,MAAM,CAACiC,SAAU;UAAAV,QAAA,gBAC7BrB,OAAA;YAAOgC,OAAO,EAAC,OAAO;YAAAX,QAAA,EAAC;UAAM;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACrC3B,OAAA;YACIiC,IAAI,EAAC,UAAU;YACfC,EAAE,EAAC,OAAO;YACVtB,IAAI,EAAC,OAAO;YACZC,KAAK,EAAET,QAAQ,CAACI,KAAM;YACtB2B,QAAQ,EAAEzB,YAAa;YACvB0B,QAAQ;UAAA;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACN3B,OAAA;UAAKmB,SAAS,EAAErB,MAAM,CAACiC,SAAU;UAAAV,QAAA,gBAC7BrB,OAAA;YAAOgC,OAAO,EAAC,cAAc;YAAAX,QAAA,EAAC;UAAgB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACtD3B,OAAA;YACIiC,IAAI,EAAC,UAAU;YACfC,EAAE,EAAC,cAAc;YACjBtB,IAAI,EAAC,cAAc;YACnBC,KAAK,EAAET,QAAQ,CAACK,YAAa;YAC7B0B,QAAQ,EAAEzB,YAAa;YACvB0B,QAAQ;UAAA;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACN3B,OAAA;UAAQiC,IAAI,EAAC,QAAQ;UAACd,SAAS,EAAErB,MAAM,CAACuC,YAAa;UAAAhB,QAAA,EAAC;QAAS;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtE,CAAC,eACP3B,OAAA;QAAQuB,OAAO,EAAErB,OAAQ;QAACiB,SAAS,EAAErB,MAAM,CAACwC,WAAY;QAAAjB,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACxB,EAAA,CAtFIF,QAAQ;AAAAsC,EAAA,GAARtC,QAAQ;AAwFd,eAAeA,QAAQ;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}