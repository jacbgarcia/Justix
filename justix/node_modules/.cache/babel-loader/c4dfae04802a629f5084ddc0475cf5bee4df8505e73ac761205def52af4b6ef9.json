{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const ForunsForms = ({ id_forum }) => {\n//     const [id_usuario, setIdUsuario] = useState(null);\n//     const [numeroProtocolo, setNumeroProtocolo] = useState('');\n//     const [comentario, setComentario] = useState('');\n//     const [avaliacao, setAvaliacao] = useState(null);\n//     const [horarioChegada, setHorarioChegada] = useState('');\n//     const [horarioSaida, setHorarioSaida] = useState('');\n//     const [error, setError] = useState('');\n\n//     // Pega o ID do usuário do localStorage ao carregar o componente\n//     useEffect(() => {\n//         const user = JSON.parse(localStorage.getItem('usuarios'));\n//         if (user && user.id) {\n//             setIdUsuario(user.id);\n//         } else {\n//             setError(\"Usuário não encontrado no localStorage\");\n//         }\n//     }, []);\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n\n//         console.log(\"Dados a serem enviados:\", {\n//             id_usuario: id_usuario,\n//             id_forum: id_forum,\n//             numero_protocolo: numeroProtocolo,\n//             comentario: comentario || null,\n//             avaliacao: avaliacao,\n//             horario_chegada: horarioChegada || null,\n//             horario_saida: horarioSaida || null,\n//         });\n\n//         if (!id_usuario || !id_forum) {\n//             setError(\"ID do usuário e ID do fórum são obrigatórios.\");\n//             return;\n//         }\n\n//         try {\n//             const response = await axios.post(`http://localhost:3001/av_foruns/${id_forum}`, {\n//                 id_usuario: id_usuario,\n//                 numero_protocolo: numeroProtocolo,\n//                 comentario: comentario || null,\n//                 avaliacao: avaliacao,\n//                 horario_chegada: horarioChegada || null,\n//                 horario_saida: horarioSaida || null,\n//             });\n\n//             console.log(\"Resposta do servidor:\", response.data);\n//         } catch (error) {\n//             console.error(\"Erro ao adicionar comentário:\", error.response?.data || error.message);\n//             setError(error.response?.data?.error || \"Erro ao adicionar comentário.\");\n//         }\n//     };\n\n//     return (\n//         <form onSubmit={handleSubmit}>\n//             <label>\n//                 Número de Protocolo:\n//                 <input\n//                     type=\"text\"\n//                     value={numeroProtocolo}\n//                     onChange={(e) => setNumeroProtocolo(e.target.value)}\n//                     required\n//                 />\n//             </label>\n\n//             <label>\n//                 Comentário:\n//                 <textarea\n//                     value={comentario}\n//                     onChange={(e) => setComentario(e.target.value)}\n//                 />\n//             </label>\n\n//             <label>\n//                 Avaliação:\n//                 <select\n//                     value={avaliacao || ''}\n//                     onChange={(e) => setAvaliacao(e.target.value ? parseInt(e.target.value, 10) : null)}\n//                     required\n//                 >\n//                     <option value=\"\">Selecione</option>\n//                     {[1, 2, 3, 4, 5].map((star) => (\n//                         <option key={star} value={star}>\n//                             {star} Estrela{star > 1 ? 's' : ''}\n//                         </option>\n//                     ))}\n//                 </select>\n//             </label>\n\n//             <label>\n//                 Horário de Chegada:\n//                 <input\n//                     type=\"time\"\n//                     value={horarioChegada}\n//                     onChange={(e) => setHorarioChegada(e.target.value)}\n//                 />\n//             </label>\n\n//             <label>\n//                 Horário de Saída:\n//                 <input\n//                     type=\"time\"\n//                     value={horarioSaida}\n//                     onChange={(e) => setHorarioSaida(e.target.value)}\n//                 />\n//             </label>\n\n//             {error && <p style={{ color: 'red' }}>{error}</p>}\n\n//             <button type=\"submit\">Enviar Comentário</button>\n//         </form>\n//     );\n// };\n\n// export default ForunsForms;","map":{"version":3,"names":[],"sources":["C:/Users/vinic/OneDrive/Área de Trabalho/React project/justix/src/components/BDPages/Feedbacks/ForunsFormFeed.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const ForunsForms = ({ id_forum }) => {\r\n//     const [id_usuario, setIdUsuario] = useState(null);\r\n//     const [numeroProtocolo, setNumeroProtocolo] = useState('');\r\n//     const [comentario, setComentario] = useState('');\r\n//     const [avaliacao, setAvaliacao] = useState(null);\r\n//     const [horarioChegada, setHorarioChegada] = useState('');\r\n//     const [horarioSaida, setHorarioSaida] = useState('');\r\n//     const [error, setError] = useState('');\r\n\r\n//     // Pega o ID do usuário do localStorage ao carregar o componente\r\n//     useEffect(() => {\r\n//         const user = JSON.parse(localStorage.getItem('usuarios'));\r\n//         if (user && user.id) {\r\n//             setIdUsuario(user.id);\r\n//         } else {\r\n//             setError(\"Usuário não encontrado no localStorage\");\r\n//         }\r\n//     }, []);\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n\r\n//         console.log(\"Dados a serem enviados:\", {\r\n//             id_usuario: id_usuario,\r\n//             id_forum: id_forum,\r\n//             numero_protocolo: numeroProtocolo,\r\n//             comentario: comentario || null,\r\n//             avaliacao: avaliacao,\r\n//             horario_chegada: horarioChegada || null,\r\n//             horario_saida: horarioSaida || null,\r\n//         });\r\n\r\n//         if (!id_usuario || !id_forum) {\r\n//             setError(\"ID do usuário e ID do fórum são obrigatórios.\");\r\n//             return;\r\n//         }\r\n\r\n//         try {\r\n//             const response = await axios.post(`http://localhost:3001/av_foruns/${id_forum}`, {\r\n//                 id_usuario: id_usuario,\r\n//                 numero_protocolo: numeroProtocolo,\r\n//                 comentario: comentario || null,\r\n//                 avaliacao: avaliacao,\r\n//                 horario_chegada: horarioChegada || null,\r\n//                 horario_saida: horarioSaida || null,\r\n//             });\r\n\r\n//             console.log(\"Resposta do servidor:\", response.data);\r\n//         } catch (error) {\r\n//             console.error(\"Erro ao adicionar comentário:\", error.response?.data || error.message);\r\n//             setError(error.response?.data?.error || \"Erro ao adicionar comentário.\");\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <form onSubmit={handleSubmit}>\r\n//             <label>\r\n//                 Número de Protocolo:\r\n//                 <input\r\n//                     type=\"text\"\r\n//                     value={numeroProtocolo}\r\n//                     onChange={(e) => setNumeroProtocolo(e.target.value)}\r\n//                     required\r\n//                 />\r\n//             </label>\r\n\r\n//             <label>\r\n//                 Comentário:\r\n//                 <textarea\r\n//                     value={comentario}\r\n//                     onChange={(e) => setComentario(e.target.value)}\r\n//                 />\r\n//             </label>\r\n\r\n//             <label>\r\n//                 Avaliação:\r\n//                 <select\r\n//                     value={avaliacao || ''}\r\n//                     onChange={(e) => setAvaliacao(e.target.value ? parseInt(e.target.value, 10) : null)}\r\n//                     required\r\n//                 >\r\n//                     <option value=\"\">Selecione</option>\r\n//                     {[1, 2, 3, 4, 5].map((star) => (\r\n//                         <option key={star} value={star}>\r\n//                             {star} Estrela{star > 1 ? 's' : ''}\r\n//                         </option>\r\n//                     ))}\r\n//                 </select>\r\n//             </label>\r\n\r\n//             <label>\r\n//                 Horário de Chegada:\r\n//                 <input\r\n//                     type=\"time\"\r\n//                     value={horarioChegada}\r\n//                     onChange={(e) => setHorarioChegada(e.target.value)}\r\n//                 />\r\n//             </label>\r\n\r\n//             <label>\r\n//                 Horário de Saída:\r\n//                 <input\r\n//                     type=\"time\"\r\n//                     value={horarioSaida}\r\n//                     onChange={(e) => setHorarioSaida(e.target.value)}\r\n//                 />\r\n//             </label>\r\n\r\n//             {error && <p style={{ color: 'red' }}>{error}</p>}\r\n            \r\n//             <button type=\"submit\">Enviar Comentário</button>\r\n//         </form>\r\n//     );\r\n// };\r\n\r\n// export default ForunsForms;\r\n\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}